{"version":3,"sources":["views/docs/RoutingView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"yjBAGO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,MAAM,KAAO,kBAAkB,MAAQ,KAS3FC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,WACH,WACL,qBAAK,sCAAqC,0BAAYC,WAAW,KAAM,gBAA6B,QAAO,0BAAYA,WAAW,KAAM,oBAAiC,aACzK,kBACE,GAAM,uBACH,uBACL,qBAAK,ySACL,qBAAK,yCAAwC,0BAAYA,WAAW,KAAM,QAAqB,QAAO,0BAAYA,WAAW,KAAM,YAAyB,oDAC5J,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,k8GAGhB,qBAAG,0BAAYA,WAAW,KAAM,QAAqB,8CAA6C,0BAAYA,WAAW,KAAM,YAAyB,+GACxJ,qBAAK,uDAAsD,0BAAYA,WAAW,KAAM,YAAyB,oJACjH,kBACE,GAAM,qBACH,qBACL,qBAAK,8WAKTJ,EAAWK,gBAAiB,EACrB,MAAMC,EAAkB,CAACL,EAAW,KAAO,CAChD,CACEM,GAAI,sBACJC,MAAO,EACPC,MAAO,sBACPC,SAAU,IAId,CACIH,GAAI,oBACJC,MAAO,EACPC,MAAO,oBACPC,SAAU,KAMDC,EAAc","file":"static/js/101.fb6b018c.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.205,\"time\":72300.00000000001,\"words\":241}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"routing\"\n    }}>{`Routing`}</h1>\n    <p>{`The entire routing is based on the `}<inlineCode parentName=\"p\">{`react-router`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`react-router-dom`}</inlineCode>{` modules.`}</p>\n    <h2 {...{\n      \"id\": \"lazy-loading-routes\"\n    }}>{`Lazy loading routes`}</h2>\n    <p>{`Most React apps will have their files “bundled” using tools like Webpack, Rollup or Browserify. Bundling is the process of following imported files and merging them into a single file: a “bundle”. This bundle can then be included on a webpage to load an entire app at once.`}</p>\n    <p>{`To reduce bundle size, we use the new `}<inlineCode parentName=\"p\">{`lazy`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Suspense`}</inlineCode>{` React methods with the dynamic import() syntax.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> React<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  lazy<span class=\\\"token punctuation\\\">,</span>\\n  Suspense\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> LoadingScreen <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/components/LoadingScreen'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Routes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Suspense</span></span> <span class=\\\"token attr-name\\\">fallback</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">LoadingScreen</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n          <span class=\\\"token attr-name\\\">exact</span>\\n          <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>/404<span class=\\\"token punctuation\\\">\\\"</span></span>\\n          <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">lazy</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'src/views/pages/ErrorView'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Suspense</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p><inlineCode parentName=\"p\">{`lazy`}</inlineCode>{` takes a function that must call a dynamic `}<inlineCode parentName=\"p\">{`import()`}</inlineCode>{`. This must return a Promise which resolves to a module with a default export containing a React component.`}</p>\n    <p>{`The lazy component should then be rendered inside a `}<inlineCode parentName=\"p\">{`Suspense`}</inlineCode>{` component, which allows us to show some fallback content (such as a loading indicator) while we’re waiting for the lazy component to load.`}</p>\n    <h2 {...{\n      \"id\": \"protecting-routes\"\n    }}>{`Protecting routes`}</h2>\n    <p>{`We created route wrappers to check the user credentials before displaying the route content. For example, we only allow the dashboard rendering only if the user is logged in and login/register pages for unauthencated users. This can be extended and add one extra layer of security by checking for user role. It’s up to you to decide your protection method.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"lazy-loading-routes\",\n    level: 2,\n    title: \"Lazy loading routes\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"protecting-routes\",\n    level: 2,\n    title: \"Protecting routes\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}