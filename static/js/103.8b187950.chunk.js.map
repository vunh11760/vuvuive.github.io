{"version":3,"sources":["views/docs/StateManagementView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","target","href","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"yjBAGO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,MAAM,KAAO,OAAO,MAAQ,KAShFC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,oBACH,oBACL,kBACE,GAAM,eACH,eACL,qBAAK,2UAC4L,iBAAGC,OAAO,SAASC,KAAK,yCAA0C,QAAY,KAC/Q,qBAAK,uLACL,kBACE,GAAM,SACH,SACL,qBAAK,0FAAyF,iBAAGD,OAAO,SAASC,KAAK,gDAAiD,QAAY,+DACnL,qBAAK,kRACL,qBAAK,0BACL,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,ghGAGhB,qBAAK,wFAA6E,0BAAYA,WAAW,KAAM,eAA4B,sEAC3I,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,oyCAGhB,qBAAK,kOACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,i9BAGhB,qBAAK,YAAW,0BAAYA,WAAW,KAAM,UAAuB,4DAA2D,0BAAYA,WAAW,KAAM,SAAsB,aAKtLN,EAAWO,gBAAiB,EACrB,MAAMC,EAAkB,CAACP,EAAW,KAAO,CAChD,CACEQ,GAAI,cACJC,MAAO,EACPC,MAAO,cACPC,SAAU,IAId,CACIH,GAAI,QACJC,MAAO,EACPC,MAAO,QACPC,SAAU,KAMDC,EAAc","file":"static/js/103.8b187950.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.675,\"time\":100500,\"words\":335}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"state-management\"\n    }}>{`State Management`}</h1>\n    <h2 {...{\n      \"id\": \"context-api\"\n    }}>{`Context API`}</h2>\n    <p>{`Context provides a way to pass data through the component tree without having to pass props down manually at every level.\nContext is designed to share data that can be considered “global” for a tree of React components, such as the current authenticated user, theme, or preferred language. You can read more about it `}<a target=\"_blank\" href=\"https://reactjs.org/docs/context.html\">{`here`}</a>{`.`}</p>\n    <p>{`We used it to manage the app settings. Once the project is mounted we extract the stored settings from localStorage, pass the data to context provider and then use it when needed.`}</p>\n    <h2 {...{\n      \"id\": \"redux\"\n    }}>{`Redux`}</h2>\n    <p>{`Redux is more robust alternative and currently offers more helpful features. Here is a `}<a target=\"_blank\" href=\"https://redux.js.org/basics/usage-with-react\">{`link`}</a>{` that can help you understand the entire concept behind it.`}</p>\n    <p>{`The project uses Redux with Hooks to help you manage authenticated user, chat, kanban, mail apps, etc. The clear project structure allows you to replace it whenever you need to with ease. There are 2 main folders located in src folder: “actions” and \"reducers.`}</p>\n    <p>{`Here is how to use it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// SettingsView.js</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useDispatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'react-redux'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> logout <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/actions/accountActions'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">SettingsView</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> dispatch <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useDispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">handleLogout</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">logout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      Settings\\n\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Button</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleLogout<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        Logout\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Button</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`When clicking “logout” we dispatch the logout action. Now this action uses `}<inlineCode parentName=\"p\">{`authService`}</inlineCode>{` to clear the session and remove the JWT from future API requests.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// src/actions/accountActions.js</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">logout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">dispatch</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    authService<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">logout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token function\\\">dispatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      type<span class=\\\"token operator\\\">:</span> <span class=\\\"token constant\\\">LOGOUT</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`AuthService does not control the app state, it only removes your authentication from next requests. So, now all we have to do is to ensure that we remove the user data from the store. Here is when the reducer does its job.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token comment\\\">// src/reducers/accountReducer.js</span>\\n\\n    <span class=\\\"token keyword\\\">case</span> <span class=\\\"token constant\\\">LOGOUT</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token function\\\">produce</span><span class=\\\"token punctuation\\\">(</span>state<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">draft</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        draft<span class=\\\"token punctuation\\\">.</span>user <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`When the `}<inlineCode parentName=\"p\">{`LOGOUT`}</inlineCode>{` action type is triggered, it produces a new state using `}<inlineCode parentName=\"p\">{`immer`}</inlineCode>{` module.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"context-api\",\n    level: 2,\n    title: \"Context API\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"redux\",\n    level: 2,\n    title: \"Redux\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}