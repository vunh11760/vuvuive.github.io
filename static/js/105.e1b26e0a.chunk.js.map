{"version":3,"sources":["views/docs/ThemingView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"yjBAGO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAM,KAAO,kBAAkB,MAAQ,KAS3FC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,WACH,WACL,qBAAK,uPACL,kBACE,GAAM,gBACH,gBACL,qBAAK,uFACL,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,0oEAGhB,kBACE,GAAM,qCACH,qCACL,qBAAK,MAAK,0BAAYA,WAAW,KAAM,sBAAmC,mNAAkN,0BAAYA,WAAW,KAAM,QAAqB,aAKlVJ,EAAWK,gBAAiB,EACrB,MAAMC,EAAkB,CAACL,EAAW,KAAO,CAChD,CACEM,GAAI,eACJC,MAAO,EACPC,MAAO,eACPC,SAAU,IAId,CACIH,GAAI,oCACJC,MAAO,EACPC,MAAO,oCACPC,SAAU,KAMDC,EAAc","file":"static/js/105.e1b26e0a.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.655,\"time\":39300.00000000001,\"words\":131}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h1>\n    <p>{`For any type of application it is important for your customers to be able to control how it looks and we made that possible using Material UI theme setup. In this version we have two theme options, but we plan to plan to add at least one more.`}</p>\n    <h2 {...{\n      \"id\": \"how-it-works\"\n    }}>{`How it works`}</h2>\n    <p>{`Before rendering the application, we extract the user settings and setup the theme.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ThemeProvider</span></span> <span class=\\\"token attr-name\\\">theme</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token function\\\">createTheme</span><span class=\\\"token punctuation\\\">(</span>settings<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StylesProvider</span></span> <span class=\\\"token attr-name\\\">jss</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>jss<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Content */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StylesProvider</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">ThemeProvider</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"updating-palette-and-other-styles\"\n    }}>{`Updating palette and other styles`}</h2>\n    <p>{`In `}<inlineCode parentName=\"p\">{`src/theme/index.js`}</inlineCode>{` you will see both theme setups. They have different palettes, shadows, overrides, etc. This allows you to control each of them individually. If you want to share a configuration globally, you can update the `}<inlineCode parentName=\"p\">{`base`}</inlineCode>{` object.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"how-it-works\",\n    level: 2,\n    title: \"How it works\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"updating-palette-and-other-styles\",\n    level: 2,\n    title: \"Updating palette and other styles\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}