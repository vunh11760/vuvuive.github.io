{"version":3,"sources":["components/HeaderBreadcrumbs.js","pages/components-overview/extra/MultiLanguage.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","spacing","direction","alignItems","flexGrow","variant","gutterBottom","flexShrink","isString","href","target","map","noWrap","display","RootStyle","styled","Page","theme","paddingTop","paddingBottom","MultiLanguage","useLocales","allLang","currentLang","translate","onChangeLang","title","pt","pb","bgcolor","palette","mode","maxWidth","name","PATH_PAGE","components","p","row","value","onChange","event","lang","label","control","my","component","alt","src","icon","mr"],"mappings":"sTAiBe,SAASA,EAAT,GAA2F,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,QAA8C,IAArCC,gBAAqC,MAApB,GAAoB,EAAhBC,EAAgB,EAAhBA,GAAOC,EAAS,iBACvG,OACE,eAAC,IAAD,CAAOD,GAAIA,EAAIE,GAAI,EAAGC,QAAS,EAA/B,UACE,eAAC,IAAD,CAAOC,UAAU,MAAMC,WAAW,SAAlC,UACE,eAAC,IAAD,CAAKL,GAAI,CAAEM,SAAU,GAArB,UACE,cAAC,IAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SACGV,IAEH,cAAC,IAAD,aAAcF,MAAOA,GAAWK,OAGjCJ,GAAU,cAAC,IAAD,CAAKG,GAAI,CAAES,WAAY,GAAvB,SAA6BZ,OAGzCa,mBAASX,GACR,cAAC,IAAD,CAAMY,KAAMZ,EAAUa,OAAO,SAASL,QAAQ,QAA9C,SACGR,IAGHA,EAASc,KAAI,SAACF,GAAD,OACX,cAAC,IAAD,CAAMG,QAAM,EAAYH,KAAMA,EAAMJ,QAAQ,QAAQK,OAAO,SAASZ,GAAI,CAAEe,QAAS,QAAnF,SACGJ,GADeA,W,kCCrC5B,yKAaMK,EAAYC,YAAOC,IAAPD,EAAa,gBAAGE,EAAH,EAAGA,MAAH,MAAgB,CAC7CC,WAAYD,EAAMhB,QAAQ,IAC1BkB,cAAeF,EAAMhB,QAAQ,QAGhB,SAASmB,IACtB,MAA0DC,cAAlDC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,UAAWC,EAAzC,EAAyCA,aAEzC,OACE,eAACX,EAAD,CAAWY,MAAM,0CAAjB,UACE,cAAC,IAAD,CACE5B,GAAI,CACF6B,GAAI,EACJC,GAAI,EACJ5B,GAAI,GACJ6B,QAAS,SAACZ,GAAD,MAAmC,UAAvBA,EAAMa,QAAQC,KAAmB,WAAa,aALvE,SAQE,cAAC,IAAD,CAAWC,SAAS,KAApB,SACE,cAAC,IAAD,CACEpC,QAAQ,iBACRF,MAAO,CAAC,CAAEuC,KAAM,aAAcxB,KAAMyB,IAAUC,YAAc,CAAEF,KAAM,mBACpEpC,SAAS,kCAKf,cAAC,IAAD,CAAWmC,SAAS,KAApB,SACE,eAAC,IAAD,CAAMlC,GAAI,CAAEsC,EAAG,GAAf,UACE,cAAC,IAAD,CAAYC,KAAG,EAACC,MAAOf,EAAYe,MAAOC,SAAU,SAACC,GAAD,OAAWf,EAAae,EAAM9B,OAAO4B,QAAzF,SACGhB,EAAQX,KAAI,SAAC8B,GAAD,OACX,cAAC,IAAD,CAAmCH,MAAOG,EAAKH,MAAOI,MAAOD,EAAKC,MAAOC,QAAS,cAAC,IAAD,KAA3DF,EAAKC,YAIhC,eAAC,IAAD,CAAK5C,GAAI,CAAE8C,GAAI,EAAG/B,QAAS,OAAQV,WAAY,UAA/C,UACE,cAAC,IAAD,CAAK0C,UAAU,MAAMC,IAAKvB,EAAYmB,MAAOK,IAAKxB,EAAYyB,KAAMlD,GAAI,CAAEmD,GAAI,KAC9E,cAAC,IAAD,CAAY5C,QAAQ,KAApB,SAA0BmB,EAAU,mBAEtC,cAAC,IAAD,CAAYnB,QAAQ,QAApB,SAA6BmB,EAAU","file":"static/js/109.88d4e0d9.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link, Stack } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Stack sx={sx} mb={5} spacing={2}>\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Stack>\r\n\r\n      {isString(moreLink) ? (\r\n        <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n          {moreLink}\r\n        </Link>\r\n      ) : (\r\n        moreLink.map((href) => (\r\n          <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'flex' }}>\r\n            {href}\r\n          </Link>\r\n        ))\r\n      )}\r\n    </Stack>\r\n  );\r\n}\r\n","// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Radio, Container, Typography, RadioGroup, FormControlLabel } from '@material-ui/core';\r\n// routes\r\nimport { PATH_PAGE } from '../../../routes/paths';\r\n// hooks\r\nimport useLocales from '../../../hooks/useLocales';\r\n// components\r\nimport Page from '../../../components/Page';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  paddingTop: theme.spacing(11),\r\n  paddingBottom: theme.spacing(15)\r\n}));\r\n\r\nexport default function MultiLanguage() {\r\n  const { allLang, currentLang, translate, onChangeLang } = useLocales();\r\n\r\n  return (\r\n    <RootStyle title=\"Components: Multi Language | Minimal-UI\">\r\n      <Box\r\n        sx={{\r\n          pt: 6,\r\n          pb: 1,\r\n          mb: 10,\r\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800')\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <HeaderBreadcrumbs\r\n            heading=\"Multi Language\"\r\n            links={[{ name: 'Components', href: PATH_PAGE.components }, { name: 'Multi Language' }]}\r\n            moreLink=\"https://react.i18next.com\"\r\n          />\r\n        </Container>\r\n      </Box>\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Card sx={{ p: 3 }}>\r\n          <RadioGroup row value={currentLang.value} onChange={(event) => onChangeLang(event.target.value)}>\r\n            {allLang.map((lang) => (\r\n              <FormControlLabel key={lang.label} value={lang.value} label={lang.label} control={<Radio />} />\r\n            ))}\r\n          </RadioGroup>\r\n\r\n          <Box sx={{ my: 3, display: 'flex', alignItems: 'center' }}>\r\n            <Box component=\"img\" alt={currentLang.label} src={currentLang.icon} sx={{ mr: 1 }} />\r\n            <Typography variant=\"h2\">{translate('demo.title')}</Typography>\r\n          </Box>\r\n          <Typography variant=\"body1\">{translate('demo.introduction')}</Typography>\r\n        </Card>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}