{"version":3,"sources":["components/authentication/register/RegisterForm.js","pages/authentication/Register.js"],"names":["RegisterForm","register","useAuth","isMountedRef","useIsMountedRef","useSnackbar","enqueueSnackbar","closeSnackbar","useState","showPassword","setShowPassword","RegisterSchema","Yup","shape","firstName","min","max","required","lastName","email","password","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","setErrors","setSubmitting","variant","action","key","size","onClick","icon","closeFill","current","console","error","afterSubmit","message","errors","touched","handleSubmit","isSubmitting","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","direction","xs","sm","TextField","fullWidth","label","Boolean","helperText","type","InputProps","endAdornment","InputAdornment","position","IconButton","edge","prev","eyeFill","eyeOffFill","LoadingButton","loading","RootStyle","styled","Page","theme","breakpoints","up","display","SectionStyle","Card","width","maxWidth","flexDirection","justifyContent","margin","ContentStyle","minHeight","padding","Register","method","title","AuthLayout","Link","underline","component","RouterLink","to","PATH_AUTH","login","Typography","sx","px","mt","mb","alt","src","Container","Box","alignItems","flexGrow","gutterBottom","color","Tooltip","capitalCase","height","AuthFirebaseSocial","align","textAlign"],"mappings":"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","file":"static/js/131.70b03b84.chunk.js","sourcesContent":["import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// material\r\nimport { Stack, TextField, IconButton, InputAdornment, Alert } from '@material-ui/core';\r\nimport { LoadingButton } from '@material-ui/lab';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function RegisterForm() {\r\n  const { register } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('First name required'),\r\n    lastName: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required('Last name required'),\r\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n    password: Yup.string().required('Password is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        await register(values.email, values.password, values.firstName, values.lastName);\r\n        enqueueSnackbar('Register success', {\r\n          variant: 'success',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (isMountedRef.current) {\r\n          setErrors({ afterSubmit: error.message });\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\r\n\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"First name\"\r\n              {...getFieldProps('firstName')}\r\n              error={Boolean(touched.firstName && errors.firstName)}\r\n              helperText={touched.firstName && errors.firstName}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Last name\"\r\n              {...getFieldProps('lastName')}\r\n              error={Boolean(touched.lastName && errors.lastName)}\r\n              helperText={touched.lastName && errors.lastName}\r\n            />\r\n          </Stack>\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email address\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"Password\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n\r\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Register\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { capitalCase } from 'change-case';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Link, Container, Typography, Tooltip } from '@material-ui/core';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// layouts\r\nimport AuthLayout from '../../layouts/AuthLayout';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport { MHidden } from '../../components/@material-extend';\r\nimport { RegisterForm } from '../../components/authentication/register';\r\nimport AuthFirebaseSocials from '../../components/authentication/AuthFirebaseSocial';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  [theme.breakpoints.up('md')]: {\r\n    display: 'flex'\r\n  }\r\n}));\r\n\r\nconst SectionStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 464,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  margin: theme.spacing(2, 0, 2, 2)\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  minHeight: '100vh',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Register() {\r\n  const { method } = useAuth();\r\n\r\n  return (\r\n    <RootStyle title=\"Register | Minimal-UI\">\r\n      <AuthLayout>\r\n        Already have an account? &nbsp;\r\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.login}>\r\n          Login\r\n        </Link>\r\n      </AuthLayout>\r\n\r\n      <MHidden width=\"mdDown\">\r\n        <SectionStyle>\r\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\r\n            Manage the job more effectively with Minimal\r\n          </Typography>\r\n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\r\n        </SectionStyle>\r\n      </MHidden>\r\n\r\n      <Container>\r\n        <ContentStyle>\r\n          <Box sx={{ mb: 5, display: 'flex', alignItems: 'center' }}>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Typography variant=\"h4\" gutterBottom>\r\n                Get started absolutely free.\r\n              </Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>Free forever. No credit card needed.</Typography>\r\n            </Box>\r\n            <Tooltip title={capitalCase(method)}>\r\n              <Box component=\"img\" src={`/static/auth/ic_${method}.png`} sx={{ width: 32, height: 32 }} />\r\n            </Tooltip>\r\n          </Box>\r\n\r\n          {method === 'firebase' && <AuthFirebaseSocials />}\r\n\r\n          <RegisterForm />\r\n\r\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\r\n            By registering, I agree to Minimal&nbsp;\r\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\r\n              Terms of Service\r\n            </Link>\r\n            &nbsp;and&nbsp;\r\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\r\n              Privacy Policy\r\n            </Link>\r\n            .\r\n          </Typography>\r\n\r\n          <MHidden width=\"smUp\">\r\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\r\n              Already have an account?&nbsp;\r\n              <Link to={PATH_AUTH.login} component={RouterLink}>\r\n                Login\r\n              </Link>\r\n            </Typography>\r\n          </MHidden>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n"],"sourceRoot":""}