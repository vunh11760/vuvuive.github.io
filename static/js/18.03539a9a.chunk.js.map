{"version":3,"sources":["../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerInput.js","../node_modules/@material-ui/lab/DateRangePicker/date-range-manager.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerToolbar.js","../node_modules/@material-ui/lab/DateRangePickerDay/DateRangePickerDay.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerViewMobile.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerViewDesktop.js","../node_modules/@material-ui/lab/DateRangePicker/DateRangePickerView.js","../node_modules/@material-ui/lab/MobileDateRangePicker/MobileDateRangePicker.js"],"names":["DateRangePickerInput","React","props","ref","classes","currentlySelectingRangeEnd","disableOpenPicker","endText","onBlur","onChange","open","openPicker","rawValue","start","end","readOnly","renderInput","setCurrentlySelectingRangeEnd","startText","TextFieldProps","validationError","startValidationError","endValidationError","other","_objectWithoutPropertiesLoose","utils","useUtils","startRef","endRef","wrapperVariant","WrapperVariantContext","_startRef$current","current","focus","_endRef$current","lazyHandleChangeCallback","args","executeInTheNextEventLoopTick","openRangeStartSelection","openRangeEndSelection","openOnFocus","startInputProps","useMaskedInput","_extends","date","inputString","label","focused","inputProps","onClick","undefined","onFocus","endInputProps","_jsx","className","root","children","withStyles","theme","display","alignItems","breakpoints","down","flexDirection","toLabelDelimiter","margin","up","name","calculateRangeChange","range","selectedDate","newDate","Boolean","isAfter","nextSelection","newRange","isBefore","_ref","_jsxs","Typography","variant","penIcon","position","top","dateTextContainer","isMobileKeyboardViewOpen","toggleMobileKeyboardView","toolbarFormat","toolbarTitle","startDateValue","formatByString","formats","shortDate","endDateValue","PickersToolbar","isLandscape","penIconClassName","PickersToolbarButton","value","selected","endBorderStyle","borderTopRightRadius","borderBottomRightRadius","startBorderStyle","borderTopLeftRadius","borderBottomLeftRadius","DateRangePickerDay","day","outsideCurrentMonth","isEndOfHighlighting","isEndOfPreviewing","isHighlighting","isPreviewing","isStartOfHighlighting","isStartOfPreviewing","isEndOfMonth","isSameDay","endOfMonth","isStartOfMonth","startOfMonth","shouldRenderHighlight","shouldRenderPreview","clsx","rangeIntervalDayHighlightEnd","rangeIntervalDayHighlightStart","rangeIntervalDayHighlight","role","rangeIntervalPreview","rangeIntervalDayPreviewEnd","rangeIntervalDayPreviewStart","rangeIntervalDayPreview","PickersDay","disableMargin","allowSameDateSelection","allowKeyboardControl","notSelectedDate","dayInsideRangeInterval","dayOutsideRangeInterval","borderLeftColor","palette","divider","borderRightColor","borderRadius","color","primary","contrastText","backgroundColor","alpha","light","paddingLeft","marginLeft","DAY_MARGIN","paddingRight","marginRight","transform","border","grey","getContrastText","prevProps","nextProps","areDayPropsEqual","onlyDayView","DateRangePickerViewMobile","changeMonth","components","componentsProps","leftArrowButtonText","maxDateProp","maxDate","minDateProp","minDate","renderDay","_","dayProps","rightArrowButtonText","defaultMinDate","defaultMaxDate","PickersCalendarHeader","onMonthChange","openView","views","PickersCalendar","onFocusedDayChange","doNothing","DayProps","isWithinRange","isStartOfRange","isEndOfRange","getCalendarsArray","calendars","Array","fill","rangeCalendarContainer","borderRight","calendar","minWidth","minHeight","arrowSwitcher","padding","justifyContent","currentMonth","disableFuture","disablePast","dateRangeProps","rangePreviewDay","setRangePreviewDay","isNextMonthDisabled","useNextMonthDisabled","isPreviousMonthDisabled","usePreviousMonthDisabled","previewingRange","options","previewStart","previewEnd","calculateRangePreview","handleDayChange","CalendarTransitionProps","onMouseLeave","selectNextMonth","getNextMonth","selectPreviousMonth","getPreviousMonth","map","index","monthOnIteration","setMonth","getMonth","PickersArrowSwitcher","onLeftClick","onRightClick","isLeftHidden","isRightHidden","isLeftDisabled","isRightDisabled","format","_createElement","key","TransitionProps","__","onMouseEnter","newPreviewRequest","DateRangePickerView","DateInputProps","defaultCalendarMonth","disableAutoMonthSwitching","disableHighlightToday","onDateChange","reduceAnimations","defaultReduceAnimations","shouldDisableDate","showToolbar","useCalendarState","disableSwitchToMonthOnDayFocus","calendarState","isDateDisabled","onMonthSwitchingAnimationEnd","changeFocusedDay","toShowToolbar","isValid","currentlySelectedDate","displayingMonthRange","currentMonthNumber","requestedMonthNumber","isSameYear","newMonth","addMonths","scrollToDayIfNeeded","handleChange","isFullRangeSelected","isRangeValid","DateRangePickerToolbar","MobileKeyboardInputView","ignoreInvalidInputs","sharedCalendarProps","DateRangePickerViewDesktop","renderView","PureDateInputComponent","rangePickerValueManager","emptyValue","parseInput","parseRangeInputValue","areValuesEqual","a","b","isEqual","MobileDateRangePicker","inProps","useThemeProps","mask","passedInputFormat","inputFormat","useParsedDate","pickerStateProps","restProps","usePickerState","pickerProps","wrapperProps","useDateRangeValidation","keyboardDate","MobileWrapper"],"mappings":"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","file":"static/js/18.03539a9a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useMaskedInput } from '../internal/pickers/hooks/useMaskedInput';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { executeInTheNextEventLoopTick } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    alignItems: 'baseline',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  },\n  toLabelDelimiter: {\n    margin: '8px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 16px'\n    }\n  }\n});\n\n/**\n * @ignore - internal component.\n */\nconst DateRangePickerInput = /*#__PURE__*/React.forwardRef(function DateRangePickerInput(props, ref) {\n  const {\n    classes,\n    currentlySelectingRangeEnd,\n    disableOpenPicker,\n    endText,\n    onBlur,\n    onChange,\n    open,\n    openPicker,\n    rawValue: [start, end],\n    readOnly,\n    renderInput,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    TextFieldProps,\n    validationError: [startValidationError, endValidationError]\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"currentlySelectingRangeEnd\", \"disableOpenPicker\", \"endText\", \"onBlur\", \"onChange\", \"open\", \"openPicker\", \"rawValue\", \"rawValue\", \"readOnly\", \"renderInput\", \"setCurrentlySelectingRangeEnd\", \"startText\", \"TextFieldProps\", \"validationError\"]);\n\n  const utils = useUtils();\n  const startRef = React.useRef(null);\n  const endRef = React.useRef(null);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  React.useEffect(() => {\n    if (!open) {\n      return;\n    }\n\n    if (currentlySelectingRangeEnd === 'start') {\n      var _startRef$current;\n\n      (_startRef$current = startRef.current) === null || _startRef$current === void 0 ? void 0 : _startRef$current.focus();\n    } else if (currentlySelectingRangeEnd === 'end') {\n      var _endRef$current;\n\n      (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.focus();\n    }\n  }, [currentlySelectingRangeEnd, open]); // TODO: rethink this approach. We do not need to wait for calendar to be updated to rerender input (looks like freezing)\n  // TODO: so simply break 1 react's commit phase in 2 (first for input and second for calendars) by executing onChange in the next tick\n\n  const lazyHandleChangeCallback = React.useCallback((...args) => executeInTheNextEventLoopTick(() => onChange(...args)), [onChange]);\n\n  const handleStartChange = (date, inputString) => {\n    lazyHandleChangeCallback([date, utils.date(end)], inputString);\n  };\n\n  const handleEndChange = (date, inputString) => {\n    lazyHandleChangeCallback([utils.date(start), date], inputString);\n  };\n\n  const openRangeStartSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('start');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openRangeEndSelection = () => {\n    if (setCurrentlySelectingRangeEnd) {\n      setCurrentlySelectingRangeEnd('end');\n    }\n\n    if (!readOnly && !disableOpenPicker) {\n      openPicker();\n    }\n  };\n\n  const openOnFocus = wrapperVariant === 'desktop';\n  const startInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    rawValue: start,\n    onChange: handleStartChange,\n    label: startText,\n    validationError: startValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: startRef,\n      focused: open && currentlySelectingRangeEnd === 'start'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeStartSelection : undefined,\n      onFocus: openOnFocus ? openRangeStartSelection : undefined\n    }\n  }));\n  const endInputProps = useMaskedInput(_extends({}, other, {\n    readOnly,\n    label: endText,\n    rawValue: end,\n    onChange: handleEndChange,\n    validationError: endValidationError !== null,\n    TextFieldProps: _extends({}, TextFieldProps, {\n      ref: endRef,\n      focused: open && currentlySelectingRangeEnd === 'end'\n    }),\n    inputProps: {\n      onClick: !openOnFocus ? openRangeEndSelection : undefined,\n      onFocus: openOnFocus ? openRangeEndSelection : undefined\n    }\n  }));\n  return /*#__PURE__*/_jsx(\"div\", {\n    onBlur: onBlur,\n    className: classes.root,\n    ref: ref,\n    children: renderInput(startInputProps, endInputProps)\n  });\n});\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerInput'\n})(DateRangePickerInput);","export function calculateRangeChange({\n  utils,\n  range,\n  newDate: selectedDate,\n  currentlySelectingRangeEnd\n}) {\n  const [start, end] = range;\n\n  if (currentlySelectingRangeEnd === 'start') {\n    return Boolean(end) && utils.isAfter(selectedDate, end) ? {\n      nextSelection: 'end',\n      newRange: [selectedDate, null]\n    } : {\n      nextSelection: 'end',\n      newRange: [selectedDate, end]\n    };\n  }\n\n  return Boolean(start) && utils.isBefore(selectedDate, start) ? {\n    nextSelection: 'end',\n    newRange: [selectedDate, null]\n  } : {\n    nextSelection: 'start',\n    newRange: [start, selectedDate]\n  };\n}\nexport function calculateRangePreview(options) {\n  if (!options.newDate) {\n    return [null, null];\n  }\n\n  const [start, end] = options.range;\n  const {\n    newRange\n  } = calculateRangeChange(options);\n\n  if (!start || !end) {\n    return newRange;\n  }\n\n  const [previewStart, previewEnd] = newRange;\n  return options.currentlySelectingRangeEnd === 'end' ? [end, previewEnd] : [previewStart, start];\n}","import * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PickersToolbar from '../internal/pickers/PickersToolbar';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersToolbarButton from '../internal/pickers/PickersToolbarButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = {\n  root: {},\n  penIcon: {\n    position: 'relative',\n    top: 4\n  },\n  dateTextContainer: {\n    display: 'flex'\n  }\n};\n\nvar _ref = /*#__PURE__*/_jsxs(Typography, {\n  variant: \"h5\",\n  children: [\"\\xA0\", '–', \"\\xA0\"]\n});\n\n/**\n * @ignore - internal component.\n */\nconst DateRangePickerToolbar = ({\n  classes,\n  currentlySelectingRangeEnd,\n  date: [start, end],\n  endText,\n  isMobileKeyboardViewOpen,\n  setCurrentlySelectingRangeEnd,\n  startText,\n  toggleMobileKeyboardView,\n  toolbarFormat,\n  toolbarTitle = 'SELECT DATE RANGE'\n}) => {\n  const utils = useUtils();\n  const startDateValue = start ? utils.formatByString(start, toolbarFormat || utils.formats.shortDate) : startText;\n  const endDateValue = end ? utils.formatByString(end, toolbarFormat || utils.formats.shortDate) : endText;\n  return /*#__PURE__*/_jsx(PickersToolbar, {\n    className: classes.root,\n    toolbarTitle: toolbarTitle,\n    isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n    toggleMobileKeyboardView: toggleMobileKeyboardView,\n    isLandscape: false,\n    penIconClassName: classes.penIcon,\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.dateTextContainer,\n      children: [/*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: start !== null ? 'h5' : 'h6',\n        value: startDateValue,\n        selected: currentlySelectingRangeEnd === 'start',\n        onClick: () => setCurrentlySelectingRangeEnd('start')\n      }), _ref, /*#__PURE__*/_jsx(PickersToolbarButton, {\n        variant: end !== null ? 'h5' : 'h6',\n        value: endDateValue,\n        selected: currentlySelectingRangeEnd === 'end',\n        onClick: () => setCurrentlySelectingRangeEnd('end')\n      })]\n    })\n  });\n};\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerToolbar'\n})(DateRangePickerToolbar);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, alpha } from '@material-ui/core/styles';\nimport { DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersDay, { areDayPropsEqual } from '../PickersDay/PickersDay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst endBorderStyle = {\n  borderTopRightRadius: '50%',\n  borderBottomRightRadius: '50%'\n};\nconst startBorderStyle = {\n  borderTopLeftRadius: '50%',\n  borderBottomLeftRadius: '50%'\n};\nexport const styles = theme => ({\n  root: {\n    '&:first-child $rangeIntervalDayPreview': _extends({}, startBorderStyle, {\n      borderLeftColor: theme.palette.divider\n    }),\n    '&:last-child $rangeIntervalDayPreview': _extends({}, endBorderStyle, {\n      borderRightColor: theme.palette.divider\n    })\n  },\n  rangeIntervalDayHighlight: {\n    borderRadius: 0,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: alpha(theme.palette.primary.light, 0.6),\n    '&:first-child': startBorderStyle,\n    '&:last-child': endBorderStyle\n  },\n  rangeIntervalDayHighlightStart: _extends({}, startBorderStyle, {\n    paddingLeft: 0,\n    marginLeft: DAY_MARGIN / 2\n  }),\n  rangeIntervalDayHighlightEnd: _extends({}, endBorderStyle, {\n    paddingRight: 0,\n    marginRight: DAY_MARGIN / 2\n  }),\n  day: {\n    // Required to overlap preview border\n    transform: 'scale(1.1)',\n    '& > *': {\n      transform: 'scale(0.9)'\n    }\n  },\n  dayOutsideRangeInterval: {\n    '&:hover': {\n      border: `1px solid ${theme.palette.grey[500]}`\n    }\n  },\n  dayInsideRangeInterval: {\n    color: theme.palette.getContrastText(alpha(theme.palette.primary.light, 0.6))\n  },\n  notSelectedDate: {\n    backgroundColor: 'transparent'\n  },\n  rangeIntervalPreview: {\n    // replace default day component margin with transparent border to avoid jumping on preview\n    border: '2px solid transparent'\n  },\n  rangeIntervalDayPreview: {\n    borderRadius: 0,\n    border: `2px dashed ${theme.palette.divider}`,\n    borderLeftColor: 'transparent',\n    borderRightColor: 'transparent',\n    '&$rangeIntervalDayPreviewStart': _extends({\n      borderLeftColor: theme.palette.divider\n    }, startBorderStyle),\n    '&$rangeIntervalDayPreviewEnd': _extends({\n      borderRightColor: theme.palette.divider\n    }, endBorderStyle)\n  },\n  rangeIntervalDayPreviewStart: {},\n  rangeIntervalDayPreviewEnd: {}\n});\nconst DateRangePickerDay = /*#__PURE__*/React.forwardRef(function DateRangePickerDay(props, ref) {\n  const {\n    classes,\n    className,\n    day,\n    outsideCurrentMonth,\n    isEndOfHighlighting,\n    isEndOfPreviewing,\n    isHighlighting,\n    isPreviewing,\n    isStartOfHighlighting,\n    isStartOfPreviewing,\n    selected = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"day\", \"outsideCurrentMonth\", \"isEndOfHighlighting\", \"isEndOfPreviewing\", \"isHighlighting\", \"isPreviewing\", \"isStartOfHighlighting\", \"isStartOfPreviewing\", \"selected\"]);\n\n  const utils = useUtils();\n  const isEndOfMonth = utils.isSameDay(day, utils.endOfMonth(day));\n  const isStartOfMonth = utils.isSameDay(day, utils.startOfMonth(day));\n  const shouldRenderHighlight = isHighlighting && !outsideCurrentMonth;\n  const shouldRenderPreview = isPreviewing && !outsideCurrentMonth;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: clsx(classes.root, className, (isEndOfHighlighting || isEndOfMonth) && classes.rangeIntervalDayHighlightEnd, (isStartOfHighlighting || isStartOfMonth) && classes.rangeIntervalDayHighlightStart, shouldRenderHighlight && classes.rangeIntervalDayHighlight),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      role: \"cell\",\n      className: clsx(classes.rangeIntervalPreview, (isEndOfPreviewing || isEndOfMonth) && classes.rangeIntervalDayPreviewEnd, (isStartOfPreviewing || isStartOfMonth) && classes.rangeIntervalDayPreviewStart, shouldRenderPreview && classes.rangeIntervalDayPreview),\n      children: /*#__PURE__*/_jsx(PickersDay, _extends({}, other, {\n        ref: ref,\n        disableMargin: true,\n        allowSameDateSelection: true,\n        allowKeyboardControl: false,\n        day: day,\n        selected: selected,\n        outsideCurrentMonth: outsideCurrentMonth,\n        className: clsx(classes.day, !selected && [classes.notSelectedDate, isHighlighting && classes.dayInsideRangeInterval], !isHighlighting && classes.dayOutsideRangeInterval)\n      }))\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerDay.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The date to show.\n   */\n  day: PropTypes.any.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isEndOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isEndOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a highlighted date range.\n   */\n  isHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is in a preview date range.\n   */\n  isPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the start of a highlighted date range.\n   */\n  isStartOfHighlighting: PropTypes.bool.isRequired,\n\n  /**\n   * Set to `true` if the `day` is the end of a highlighted date range.\n   */\n  isStartOfPreviewing: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, day is outside of month and will be hidden.\n   */\n  outsideCurrentMonth: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, renders as selected.\n   * @default false\n   */\n  selected: PropTypes.bool\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://material-ui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [DateRangePickerDay API](https://material-ui.com/api/date-range-picker-day/)\n */\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerDay'\n})( /*#__PURE__*/React.memo(DateRangePickerDay, (prevProps, nextProps) => {\n  return prevProps.isHighlighting === nextProps.isHighlighting && prevProps.isEndOfHighlighting === nextProps.isEndOfHighlighting && prevProps.isStartOfHighlighting === nextProps.isStartOfHighlighting && prevProps.isPreviewing === nextProps.isPreviewing && prevProps.isEndOfPreviewing === nextProps.isEndOfPreviewing && prevProps.isStartOfPreviewing === nextProps.isStartOfPreviewing && areDayPropsEqual(prevProps, nextProps);\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PickersCalendarHeader from '../CalendarPicker/PickersCalendarHeader';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport { defaultMinDate, defaultMaxDate } from '../internal/pickers/constants/prop-types';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst onlyDayView = ['day'];\n/**\n * @ignore - internal component.\n */\n\nexport function DateRangePickerViewMobile(props) {\n  const {\n    changeMonth,\n    components,\n    componentsProps,\n    date,\n    leftArrowButtonText,\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dayProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dayProps)),\n    rightArrowButtonText\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"changeMonth\", \"components\", \"componentsProps\", \"date\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"]);\n\n  const utils = useUtils();\n  const minDate = minDateProp || utils.date(defaultMinDate);\n  const maxDate = maxDateProp || utils.date(defaultMaxDate);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarHeader, _extends({\n      components: components,\n      componentsProps: componentsProps,\n      leftArrowButtonText: leftArrowButtonText,\n      maxDate: maxDate,\n      minDate: minDate,\n      onMonthChange: changeMonth,\n      openView: \"day\",\n      rightArrowButtonText: rightArrowButtonText,\n      views: onlyDayView\n    }, other)), /*#__PURE__*/_jsx(PickersCalendar, _extends({}, other, {\n      date: date,\n      onChange: onChange,\n      onFocusedDayChange: doNothing,\n      renderDay: (day, _, DayProps) => renderDay(day, _extends({\n        isPreviewing: false,\n        isStartOfPreviewing: false,\n        isEndOfPreviewing: false,\n        isHighlighting: isWithinRange(utils, day, date),\n        isStartOfHighlighting: isStartOfRange(utils, day, date),\n        isEndOfHighlighting: isEndOfRange(utils, day, date)\n      }, DayProps))\n    }))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { calculateRangePreview } from './date-range-manager';\nimport PickersCalendar from '../CalendarPicker/PickersCalendar';\nimport DateRangePickerDay from '../DateRangePickerDay';\nimport { defaultMinDate, defaultMaxDate } from '../internal/pickers/constants/prop-types';\nimport PickersArrowSwitcher from '../internal/pickers/PickersArrowSwitcher';\nimport { usePreviousMonthDisabled, useNextMonthDisabled } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { isWithinRange, isStartOfRange, isEndOfRange } from '../internal/pickers/date-utils';\nimport { doNothing } from '../internal/pickers/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  rangeCalendarContainer: {\n    '&:not(:last-child)': {\n      borderRight: `2px solid ${theme.palette.divider}`\n    }\n  },\n  calendar: {\n    minWidth: 312,\n    minHeight: 288\n  },\n  arrowSwitcher: {\n    padding: '16px 16px 8px 16px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});\n\nfunction getCalendarsArray(calendars) {\n  switch (calendars) {\n    case 1:\n      return [0];\n\n    case 2:\n      return [0, 0];\n\n    case 3:\n      return [0, 0, 0];\n    // this will not work in IE11, but allows to support any amount of calendars\n\n    default:\n      return new Array(calendars).fill(0);\n  }\n}\n/**\n * @ignore - internal component.\n */\n\n\nfunction DateRangePickerViewDesktop(props) {\n  const {\n    calendars,\n    changeMonth,\n    classes,\n    components,\n    componentsProps,\n    currentlySelectingRangeEnd,\n    currentMonth,\n    date,\n    disableFuture,\n    disablePast,\n    leftArrowButtonText = 'Previous month',\n    maxDate: maxDateProp,\n    minDate: minDateProp,\n    onChange,\n    renderDay = (_, dateRangeProps) => /*#__PURE__*/_jsx(DateRangePickerDay, _extends({}, dateRangeProps)),\n    rightArrowButtonText = 'Next month'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"calendars\", \"changeMonth\", \"classes\", \"components\", \"componentsProps\", \"currentlySelectingRangeEnd\", \"currentMonth\", \"date\", \"disableFuture\", \"disablePast\", \"leftArrowButtonText\", \"maxDate\", \"minDate\", \"onChange\", \"renderDay\", \"rightArrowButtonText\"]);\n\n  const utils = useUtils();\n  const minDate = minDateProp || utils.date(defaultMinDate);\n  const maxDate = maxDateProp || utils.date(defaultMaxDate);\n  const [rangePreviewDay, setRangePreviewDay] = React.useState(null);\n  const isNextMonthDisabled = useNextMonthDisabled(currentMonth, {\n    disableFuture,\n    maxDate\n  });\n  const isPreviousMonthDisabled = usePreviousMonthDisabled(currentMonth, {\n    disablePast,\n    minDate\n  });\n  const previewingRange = calculateRangePreview({\n    utils,\n    range: date,\n    newDate: rangePreviewDay,\n    currentlySelectingRangeEnd\n  });\n  const handleDayChange = React.useCallback(day => {\n    setRangePreviewDay(null);\n    onChange(day);\n  }, [onChange]);\n\n  const handlePreviewDayChange = newPreviewRequest => {\n    if (!isWithinRange(utils, newPreviewRequest, date)) {\n      setRangePreviewDay(newPreviewRequest);\n    } else {\n      setRangePreviewDay(null);\n    }\n  };\n\n  const CalendarTransitionProps = React.useMemo(() => ({\n    onMouseLeave: () => setRangePreviewDay(null)\n  }), []);\n  const selectNextMonth = React.useCallback(() => {\n    changeMonth(utils.getNextMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  const selectPreviousMonth = React.useCallback(() => {\n    changeMonth(utils.getPreviousMonth(currentMonth));\n  }, [changeMonth, currentMonth, utils]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: getCalendarsArray(calendars).map((_, index) => {\n      const monthOnIteration = utils.setMonth(currentMonth, utils.getMonth(currentMonth) + index);\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: classes.rangeCalendarContainer,\n        children: [/*#__PURE__*/_jsx(PickersArrowSwitcher, {\n          className: classes.arrowSwitcher,\n          onLeftClick: selectPreviousMonth,\n          onRightClick: selectNextMonth,\n          isLeftHidden: index !== 0,\n          isRightHidden: index !== calendars - 1,\n          isLeftDisabled: isPreviousMonthDisabled,\n          isRightDisabled: isNextMonthDisabled,\n          leftArrowButtonText: leftArrowButtonText,\n          components: components,\n          componentsProps: componentsProps,\n          rightArrowButtonText: rightArrowButtonText,\n          children: utils.format(monthOnIteration, 'monthAndYear')\n        }), /*#__PURE__*/_createElement(PickersCalendar, _extends({}, other, {\n          key: index,\n          date: date,\n          onFocusedDayChange: doNothing,\n          className: classes.calendar,\n          onChange: handleDayChange,\n          currentMonth: monthOnIteration,\n          TransitionProps: CalendarTransitionProps,\n          renderDay: (day, __, DayProps) => renderDay(day, _extends({\n            isPreviewing: isWithinRange(utils, day, previewingRange),\n            isStartOfPreviewing: isStartOfRange(utils, day, previewingRange),\n            isEndOfPreviewing: isEndOfRange(utils, day, previewingRange),\n            isHighlighting: isWithinRange(utils, day, date),\n            isStartOfHighlighting: isStartOfRange(utils, day, date),\n            isEndOfHighlighting: isEndOfRange(utils, day, date),\n            onMouseEnter: () => handlePreviewDayChange(day)\n          }, DayProps))\n        }))]\n      }, index);\n    })\n  });\n}\n\nexport default withStyles(styles, {\n  name: 'MuiDateRangePickerViewDesktop'\n})(DateRangePickerViewDesktop);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isRangeValid } from '../internal/pickers/date-utils';\nimport { calculateRangeChange } from './date-range-manager';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport DateRangePickerToolbar from './DateRangePickerToolbar';\nimport { useCalendarState } from '../CalendarPicker/useCalendarState';\nimport { DateRangePickerViewMobile } from './DateRangePickerViewMobile';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { MobileKeyboardInputView } from '../internal/pickers/Picker/Picker';\nimport DateRangePickerInput from './DateRangePickerInput';\nimport { defaultReduceAnimations } from '../CalendarPicker/CalendarPicker';\nimport DateRangePickerViewDesktop from './DateRangePickerViewDesktop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * @ignore - internal component.\n */\nexport function DateRangePickerView(props) {\n  const {\n    calendars,\n    className,\n    currentlySelectingRangeEnd,\n    date,\n    DateInputProps,\n    defaultCalendarMonth,\n    disableAutoMonthSwitching = false,\n    disableFuture,\n    disableHighlightToday,\n    disablePast,\n    endText,\n    isMobileKeyboardViewOpen,\n    maxDate,\n    minDate,\n    onDateChange,\n    onMonthChange,\n    open,\n    reduceAnimations = defaultReduceAnimations,\n    setCurrentlySelectingRangeEnd,\n    shouldDisableDate,\n    showToolbar,\n    startText,\n    toggleMobileKeyboardView,\n    toolbarFormat,\n    toolbarTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"calendars\", \"className\", \"currentlySelectingRangeEnd\", \"date\", \"DateInputProps\", \"defaultCalendarMonth\", \"disableAutoMonthSwitching\", \"disableFuture\", \"disableHighlightToday\", \"disablePast\", \"endText\", \"isMobileKeyboardViewOpen\", \"maxDate\", \"minDate\", \"onDateChange\", \"onMonthChange\", \"open\", \"reduceAnimations\", \"setCurrentlySelectingRangeEnd\", \"shouldDisableDate\", \"showToolbar\", \"startText\", \"toggleMobileKeyboardView\", \"toolbarFormat\", \"toolbarTitle\"]);\n\n  const utils = useUtils();\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const [start, end] = date;\n  const {\n    changeMonth,\n    calendarState,\n    isDateDisabled,\n    onMonthSwitchingAnimationEnd,\n    changeFocusedDay\n  } = useCalendarState({\n    date: start || end,\n    defaultCalendarMonth,\n    disableFuture,\n    disablePast,\n    disableSwitchToMonthOnDayFocus: true,\n    maxDate,\n    minDate,\n    onMonthChange,\n    reduceAnimations,\n    shouldDisableDate\n  });\n  const toShowToolbar = showToolbar !== null && showToolbar !== void 0 ? showToolbar : wrapperVariant !== 'desktop';\n\n  const scrollToDayIfNeeded = day => {\n    if (!day || !utils.isValid(day) || isDateDisabled(day)) {\n      return;\n    }\n\n    const currentlySelectedDate = currentlySelectingRangeEnd === 'start' ? start : end;\n\n    if (currentlySelectedDate === null) {\n      // do not scroll if one of ages is not selected\n      return;\n    }\n\n    const displayingMonthRange = wrapperVariant === 'mobile' ? 0 : calendars - 1;\n    const currentMonthNumber = utils.getMonth(calendarState.currentMonth);\n    const requestedMonthNumber = utils.getMonth(day);\n\n    if (!utils.isSameYear(calendarState.currentMonth, day) || requestedMonthNumber < currentMonthNumber || requestedMonthNumber > currentMonthNumber + displayingMonthRange) {\n      const newMonth = currentlySelectingRangeEnd === 'start' ? currentlySelectedDate : // If need to focus end, scroll to the state when \"end\" is displaying in the last calendar\n      utils.addMonths(currentlySelectedDate, -displayingMonthRange);\n      changeMonth(newMonth);\n    }\n  };\n\n  React.useEffect(() => {\n    if (disableAutoMonthSwitching || !open) {\n      return;\n    }\n\n    scrollToDayIfNeeded(currentlySelectingRangeEnd === 'start' ? start : end);\n  }, [currentlySelectingRangeEnd, date]); // eslint-disable-line\n\n  const handleChange = React.useCallback(newDate => {\n    const {\n      nextSelection,\n      newRange\n    } = calculateRangeChange({\n      newDate,\n      utils,\n      range: date,\n      currentlySelectingRangeEnd\n    });\n    setCurrentlySelectingRangeEnd(nextSelection);\n    const isFullRangeSelected = currentlySelectingRangeEnd === 'end' && isRangeValid(utils, newRange);\n    onDateChange(newRange, wrapperVariant, isFullRangeSelected ? 'finish' : 'partial');\n  }, [currentlySelectingRangeEnd, date, onDateChange, setCurrentlySelectingRangeEnd, utils, wrapperVariant]);\n\n  const renderView = () => {\n    const sharedCalendarProps = _extends({\n      date,\n      isDateDisabled,\n      changeFocusedDay,\n      onChange: handleChange,\n      reduceAnimations,\n      disableHighlightToday,\n      onMonthSwitchingAnimationEnd,\n      changeMonth,\n      currentlySelectingRangeEnd,\n      disableFuture,\n      disablePast,\n      minDate,\n      maxDate\n    }, calendarState, other);\n\n    switch (wrapperVariant) {\n      case 'desktop':\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewDesktop, _extends({\n            calendars: calendars\n          }, sharedCalendarProps));\n        }\n\n      default:\n        {\n          return /*#__PURE__*/_jsx(DateRangePickerViewMobile, _extends({}, sharedCalendarProps));\n        }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [toShowToolbar && /*#__PURE__*/_jsx(DateRangePickerToolbar, {\n      date: date,\n      isMobileKeyboardViewOpen: isMobileKeyboardViewOpen,\n      toggleMobileKeyboardView: toggleMobileKeyboardView,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText,\n      toolbarTitle: toolbarTitle,\n      toolbarFormat: toolbarFormat\n    }), isMobileKeyboardViewOpen ? /*#__PURE__*/_jsx(MobileKeyboardInputView, {\n      children: /*#__PURE__*/_jsx(DateRangePickerInput, _extends({\n        disableOpenPicker: true,\n        ignoreInvalidInputs: true\n      }, DateInputProps))\n    }) : renderView()]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DateRangePickerView.propTypes = {\n  calendars: PropTypes.oneOf([1, 2, 3]),\n  disableAutoMonthSwitching: PropTypes.bool\n} : void 0;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useThemeProps as useThemeProps } from '@material-ui/core/styles';\nimport MobileWrapper from '../internal/pickers/wrappers/MobileWrapper';\nimport { useUtils } from '../internal/pickers/hooks/useUtils';\nimport { useParsedDate } from '../internal/pickers/hooks/date-helpers-hooks';\nimport { defaultMinDate, defaultMaxDate } from '../internal/pickers/constants/prop-types';\nimport { useDateRangeValidation } from '../internal/pickers/hooks/useValidation';\nimport { usePickerState } from '../internal/pickers/hooks/usePickerState';\nimport { DateRangePickerView } from '../DateRangePicker/DateRangePickerView';\nimport DateRangePickerInput from '../DateRangePicker/DateRangePickerInput';\nimport { parseRangeInputValue } from '../internal/pickers/date-utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PureDateInputComponent = DateRangePickerInput;\nconst rangePickerValueManager = {\n  emptyValue: [null, null],\n  parseInput: parseRangeInputValue,\n  areValuesEqual: (utils, a, b) => utils.isEqual(a[0], b[0]) && utils.isEqual(a[1], b[1])\n};\n\n/**\n *\n * Demos:\n *\n * - [Date Range Picker](https://material-ui.com/components/date-range-picker/)\n *\n * API:\n *\n * - [MobileDateRangePicker API](https://material-ui.com/api/mobile-date-range-picker/)\n */\nconst MobileDateRangePicker = /*#__PURE__*/React.forwardRef(function MobileDateRangePicker(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMobileDateRangePicker'\n  });\n\n  const {\n    calendars = 2,\n    value,\n    onChange,\n    mask = '__/__/____',\n    startText = 'Start',\n    endText = 'End',\n    inputFormat: passedInputFormat,\n    minDate: minDateProp = defaultMinDate,\n    maxDate: maxDateProp = defaultMaxDate\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"calendars\", \"value\", \"onChange\", \"mask\", \"startText\", \"endText\", \"inputFormat\", \"minDate\", \"maxDate\"]);\n\n  const utils = useUtils();\n  const minDate = useParsedDate(minDateProp);\n  const maxDate = useParsedDate(maxDateProp);\n  const [currentlySelectingRangeEnd, setCurrentlySelectingRangeEnd] = React.useState('start');\n\n  const pickerStateProps = _extends({}, other, {\n    value,\n    onChange\n  });\n\n  const restProps = _extends({}, other, {\n    minDate,\n    maxDate\n  });\n\n  const {\n    pickerProps,\n    inputProps,\n    wrapperProps\n  } = usePickerState(pickerStateProps, rangePickerValueManager);\n  const validationError = useDateRangeValidation(props);\n\n  const DateInputProps = _extends({}, inputProps, restProps, {\n    currentlySelectingRangeEnd,\n    inputFormat: passedInputFormat || utils.formats.keyboardDate,\n    setCurrentlySelectingRangeEnd,\n    startText,\n    endText,\n    mask,\n    validationError,\n    ref\n  });\n\n  return /*#__PURE__*/_jsx(MobileWrapper, _extends({}, restProps, wrapperProps, {\n    DateInputProps: DateInputProps,\n    PureDateInputComponent: PureDateInputComponent,\n    children: /*#__PURE__*/_jsx(DateRangePickerView, _extends({\n      open: wrapperProps.open,\n      DateInputProps: DateInputProps,\n      calendars: calendars,\n      currentlySelectingRangeEnd: currentlySelectingRangeEnd,\n      setCurrentlySelectingRangeEnd: setCurrentlySelectingRangeEnd,\n      startText: startText,\n      endText: endText\n    }, pickerProps, restProps))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MobileDateRangePicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Regular expression to detect \"accepted\" symbols.\n   * @default /\\dap/gi\n   */\n  acceptRegex: PropTypes.instanceOf(RegExp),\n\n  /**\n   * Enables keyboard listener for moving between days in calendar.\n   * Defaults to `true` unless the `ClockPicker` is used inside a `Static*` picker component.\n   */\n  allowKeyboardControl: PropTypes.bool,\n\n  /**\n   * If `true`, `onChange` is fired on click even if the same date is selected.\n   * @default false\n   */\n  allowSameDateSelection: PropTypes.bool,\n\n  /**\n   * The number of calendars that render on **desktop**.\n   * @default 2\n   */\n  calendars: PropTypes.oneOf([1, 2, 3]),\n\n  /**\n   * Cancel text message.\n   * @default \"CANCEL\"\n   */\n  cancelText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * className applied to the root component.\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, it shows the clear action in the picker dialog.\n   * @default false\n   */\n  clearable: PropTypes.bool,\n\n  /**\n   * Clear text message.\n   * @default \"CLEAR\"\n   */\n  clearText: PropTypes.node,\n\n  /**\n   * The components used for each slot.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    LeftArrowButton: PropTypes.elementType,\n    LeftArrowIcon: PropTypes.elementType,\n    RightArrowButton: PropTypes.elementType,\n    RightArrowIcon: PropTypes.elementType,\n    SwitchViewButton: PropTypes.elementType,\n    SwitchViewIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Default calendar month displayed when `value={null}`.\n   */\n  defaultCalendarMonth: PropTypes.any,\n\n  /**\n   * Props applied to the [`Dialog`](/api/dialog/) element.\n   */\n  DialogProps: PropTypes.object,\n\n  /**\n   * If `true`, after selecting `start` date calendar will not automatically switch to the month of `end` date.\n   * @default false\n   */\n  disableAutoMonthSwitching: PropTypes.bool,\n\n  /**\n   * If `true` the popup or dialog will immediately close after submitting full date.\n   * @default `true` for Desktop, `false` for Mobile (based on the chosen wrapper and `desktopModeMediaQuery` prop).\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the picker and text field are disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * If `true`, todays date is rendering without highlighting with circle.\n   * @default false\n   */\n  disableHighlightToday: PropTypes.bool,\n\n  /**\n   * Disable mask on the keyboard, this should be used rarely. Consider passing proper mask for your format.\n   * @default false\n   */\n  disableMaskedInput: PropTypes.bool,\n\n  /**\n   * Do not render open picker button (renders only text field with validation).\n   * @default false\n   */\n  disableOpenPicker: PropTypes.bool,\n\n  /**\n   * @default false\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * Text for end input label and toolbar placeholder.\n   * @default 'End'\n   */\n  endText: PropTypes.node,\n\n  /**\n   * Get aria-label text for control that opens picker dialog. Aria-label text must include selected date. @DateIOType\n   * @default (value, utils) => `Choose date, selected date is ${utils.format(utils.date(value), 'fullDate')}`\n   */\n  getOpenDialogAriaText: PropTypes.func,\n\n  /**\n   * Get aria-label text for switching between views button.\n   */\n  getViewSwitchingButtonText: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  ignoreInvalidInputs: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard input adornment.\n   */\n  InputAdornmentProps: PropTypes.object,\n\n  /**\n   * Format string.\n   */\n  inputFormat: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.object\n  })]),\n\n  /**\n   * @ignore\n   */\n  key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  label: PropTypes.node,\n\n  /**\n   * Left arrow icon aria-label text.\n   */\n  leftArrowButtonText: PropTypes.string,\n\n  /**\n   * If `true` renders `LoadingComponent` in calendar instead of calendar view.\n   * Can be used to preload information and show it in calendar.\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Custom mask. Can be used to override generate from format. (e.g. `__/__/____ __:__` or `__/__/____ __:__ _M`).\n   * @default '__/__/____'\n   */\n  mask: PropTypes.string,\n\n  /**\n   * Max selectable date. @DateIOType\n   * @default defaultMaxDate\n   */\n  maxDate: PropTypes.any,\n\n  /**\n   * Min selectable date. @DateIOType\n   * @default defaultMinDate\n   */\n  minDate: PropTypes.any,\n\n  /**\n   * Ok button text.\n   * @default \"OK\"\n   */\n  okText: PropTypes.node,\n\n  /**\n   * Callback fired when date is accepted @DateIOType.\n   */\n  onAccept: PropTypes.func,\n\n  /**\n   * Callback fired when the value (the selected date range) changes @DateIOType.\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback that fired when input value or new `value` prop validation returns **new** validation error (or value is valid after error).\n   * In case of validation error detected `reason` prop return non-null value and `TextField` must be displayed in `error` state.\n   * This can be used to render appropriate form error.\n   *\n   * [Read the guide](https://next.material-ui-pickers.dev/guides/forms) about form integration and error displaying.\n   * @DateIOType\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback firing on month change. @DateIOType\n   */\n  onMonthChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Callback fired on view change.\n   */\n  onViewChange: PropTypes.func,\n\n  /**\n   * Control the popup or dialog open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Props to pass to keyboard adornment button.\n   */\n  OpenPickerButtonProps: PropTypes.object,\n\n  /**\n   * Icon displaying for open picker button.\n   */\n  openPickerIcon: PropTypes.node,\n\n  /**\n   * Force rendering in particular orientation.\n   */\n  orientation: PropTypes.oneOf(['landscape', 'portrait']),\n\n  /**\n   * Make picker read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Disable heavy animations.\n   * @default typeof navigator !== 'undefined' && /(android)/i.test(navigator.userAgent)\n   */\n  reduceAnimations: PropTypes.bool,\n\n  /**\n   * Custom renderer for `<DateRangePicker />` days. @DateIOType\n   * @example (date, dateRangePickerDayProps) => <DateRangePickerDay {...dateRangePickerDayProps} />\n   */\n  renderDay: PropTypes.func,\n\n  /**\n   * The `renderInput` prop allows you to customize the rendered input.\n   * The `startProps` and `endProps` arguments of this render prop contains props of [TextField](https://material-ui.com/api/text-field/#textfield-api),\n   * that you need to forward to the range start/end inputs respectively.\n   * Pay specific attention to the `ref` and `inputProps` keys.\n   * @example\n   * ```jsx\n   * <DateRangePicker\n   *  renderInput={(startProps, endProps) => (\n   *   <React.Fragment>\n   *     <TextField {...startProps} />\n   *     <Box sx={{ mx: 2 }}> to </Box>\n   *     <TextField {...endProps} />\n   *   </React.Fragment>;\n   *  )}\n   * />\n   * ````\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Component displaying when passed `loading` true.\n   * @default () => <span data-mui-test=\"loading-progress\">...</span>\n   */\n  renderLoading: PropTypes.func,\n\n  /**\n   * Custom formatter to be passed into Rifm component.\n   */\n  rifmFormatter: PropTypes.func,\n\n  /**\n   * Right arrow icon aria-label text.\n   */\n  rightArrowButtonText: PropTypes.string,\n\n  /**\n   * Disable specific date. @DateIOType\n   */\n  shouldDisableDate: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func,\n\n  /**\n   * If `true`, days that have `outsideCurrentMonth={true}` are displayed.\n   * @default false\n   */\n  showDaysOutsideCurrentMonth: PropTypes.bool,\n\n  /**\n   * If `true`, the today button is displayed. **Note** that `showClearButton` has a higher priority.\n   * @default false\n   */\n  showTodayButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the toolbar even in desktop mode.\n   */\n  showToolbar: PropTypes.bool,\n\n  /**\n   * Text for start input label and toolbar placeholder.\n   * @default 'Start'\n   */\n  startText: PropTypes.node,\n\n  /**\n   * Today text message.\n   * @default \"TODAY\"\n   */\n  todayText: PropTypes.node,\n\n  /**\n   * Component that will replace default toolbar renderer.\n   */\n  ToolbarComponent: PropTypes.elementType,\n\n  /**\n   * Date format, that is displaying in toolbar.\n   */\n  toolbarFormat: PropTypes.string,\n\n  /**\n   * Mobile picker date value placeholder, displaying if `value` === `null`.\n   * @default \"–\"\n   */\n  toolbarPlaceholder: PropTypes.node,\n\n  /**\n   * Mobile picker title, displaying in the toolbar.\n   * @default \"SELECT DATE\"\n   */\n  toolbarTitle: PropTypes.node,\n\n  /**\n   * The value of the date range picker.\n   */\n  value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.any, PropTypes.instanceOf(Date), PropTypes.number, PropTypes.string])).isRequired\n} : void 0;\nexport default MobileDateRangePicker;"],"sourceRoot":""}