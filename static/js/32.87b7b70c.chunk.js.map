{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","utils/wait.js","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/pages/AccountView/Header.js","views/pages/AccountView/General/ProfileDetails.js","views/pages/AccountView/General/GeneralSettings.js","views/pages/AccountView/General/index.js","views/pages/AccountView/Subscription.js","views/pages/AccountView/Notifications.js","views/pages/AccountView/Security.js","views/pages/AccountView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","Typography","variant","display","color","content","alignItems","flex","marginRight","alignSelf","marginTop","createSvgIcon","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","inputProps","_props$size","size","SwitchBase","concat","capitalize","checked","disabled","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","hoverOpacity","colorSecondary","marginLeft","spacing","grey","borderRadius","cursor","boxShadow","shadows","emphasize","width","height","ButtonBase","focusRipple","MoreHorizIcon","Breadcrumbs","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","ol","items","reduce","acc","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","renderItemsBeforeAndAfter","flexWrap","margin","listStyle","userSelect","wait","time","Promise","res","setTimeout","CardActions","_props$disableSpacing","disableSpacing","useStyles","makeStyles","Header","rest","aria-label","Link","to","RouterLink","ProfileDetails","user","Box","flexDirection","textAlign","Avatar","src","gutterBottom","firstName","lastName","state","country","timezone","Button","fullWidth","stateOptions","GeneralSettings","dispatch","useDispatch","enqueueSnackbar","useSnackbar","enableReinitialize","initialValues","canHire","email","isPublic","phone","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","updateProfile","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Divider","Grid","container","item","md","xs","TextField","error","Boolean","helperText","label","onBlur","onChange","select","SelectProps","native","Switch","edge","mt","FormHelperText","p","justifyContent","General","useSelector","account","lg","xl","overview","breakpoints","down","productImage","details","Subscription","isMountedRef","useState","subscription","setSubscription","getSubscription","useCallback","axios","get","then","response","data","currency","price","alt","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","Notifications","event","preventDefault","wrap","sm","FormControlLabel","control","defaultChecked","Security","password","passwordConfirm","min","oneOf","background","dark","minHeight","paddingTop","AccountView","currentTab","setCurrentTab","Page","Container","maxWidth","Tabs","scrollButtons","textColor","tabs","tab","Tab"],"mappings":"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","file":"static/js/32.87b7b70c.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true);\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: you have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Typography,\n  Breadcrumbs,\n  Link,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link color=\"inherit\" to=\"/app\" component={RouterLink}>\n          Dashboard\n        </Link>\n        <Typography color=\"textPrimary\">\n          Account\n        </Typography>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Settings\n      </Typography>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  name: {\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nfunction ProfileDetails({ user, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n          textAlign=\"center\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            className={classes.name}\n            gutterBottom\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {`${user.firstName} ${user.lastName}`}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body1\"\n          >\n            {`${user.state}, ${user.country}`}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {user.timezone}\n          </Typography>\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"text\"\n        >\n          Remove picture\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default ProfileDetails;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Switch,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { updateProfile } from 'src/actions/accountActions';\n\nconst stateOptions = ['Alabama', 'New York', 'San Francisco'];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction GeneralSettings({ user, className, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={{\n        canHire: user.canHire,\n        country: user.country,\n        email: user.email,\n        firstName: user.firstName,\n        isPublic: user.isPublic,\n        lastName: user.lastName,\n        phone: user.phone,\n        state: user.state,\n      }}\n      validationSchema={Yup.object().shape({\n        country: Yup.string().max(255).required('Country is required'),\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n        firstName: Yup.string().max(255).required('First name is required'),\n        lastName: Yup.string().max(255).required('Last name is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(updateProfile(values));\n          resetForm();\n          setStatus({ success: true });\n          enqueueSnackbar('Profile updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n        } finally {\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Profile\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={4}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.firstName && errors.firstName)}\n                    fullWidth\n                    helperText={touched.firstName && errors.firstName}\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"firstName\"\n                    value={values.firstName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.lastName && errors.lastName)}\n                    fullWidth\n                    helperText={touched.lastName && errors.lastName}\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"lastName\"\n                    value={values.lastName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email ? errors.email : 'We will use this email to contact you'}\n                    label=\"Email Address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"email\"\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone Number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Select State\"\n                    name=\"state\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.state}\n                    variant=\"outlined\"\n                  >\n                    {stateOptions.map((state) => (\n                      <option\n                        key={state}\n                        value={state}\n                      >\n                        {state}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    type=\"country\"\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Make Contact Info Public\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Means that anyone viewing your profile will be able to see your\n                    contacts details\n                  </Typography>\n                  <Switch\n                    checked={values.isPublic}\n                    edge=\"start\"\n                    name=\"isPublic\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    variant=\"h6\"\n                    color=\"textPrimary\"\n                  >\n                    Available to hire\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Toggling this will let your teammates know that you are available\n                    for acquiring new projects\n                  </Typography>\n                  <Switch\n                    checked={values.canHire}\n                    edge=\"start\"\n                    name=\"canHire\"\n                    onChange={handleChange}\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Save Changes\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nGeneralSettings.propTypes = {\n  className: PropTypes.string,\n  user: PropTypes.object.isRequired\n};\n\nexport default GeneralSettings;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport ProfileDetails from './ProfileDetails';\nimport GeneralSettings from './GeneralSettings';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction General({ className, ...rest }) {\n  const classes = useStyles();\n  const { user } = useSelector((state) => state.account);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <ProfileDetails user={user} />\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <GeneralSettings user={user} />\n      </Grid>\n    </Grid>\n  );\n}\n\nGeneral.propTypes = {\n  className: PropTypes.string\n};\n\nexport default General;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  overview: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse',\n      alignItems: 'flex-start'\n    }\n  },\n  productImage: {\n    marginRight: theme.spacing(1),\n    height: 48,\n    width: 48\n  },\n  details: {\n    padding: theme.spacing(3),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }\n  }\n}));\n\nfunction Subscription({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [subscription, setSubscription] = useState(null);\n\n  const getSubscription = useCallback(() => {\n    axios\n      .get('/api/account/subscription')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setSubscription(response.data.subscription);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getSubscription();\n  }, [getSubscription]);\n\n  if (!subscription) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Manage your subscription\" />\n      <Divider />\n      <CardContent>\n        <Paper variant=\"outlined\">\n          <Box className={classes.overview}>\n            <div>\n              <Typography\n                display=\"inline\"\n                variant=\"h4\"\n                color=\"textPrimary\"\n              >\n                {subscription.currency}\n                {subscription.price}\n              </Typography>\n              <Typography\n                display=\"inline\"\n                variant=\"subtitle1\"\n              >\n                /mo\n              </Typography>\n            </div>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <img\n                alt=\"Product\"\n                className={classes.productImage}\n                src=\"/static/images/products/product_freelancer.svg\"\n              />\n              <Typography\n                variant=\"overline\"\n                color=\"textSecondary\"\n              >\n                {subscription.name}\n              </Typography>\n            </Box>\n          </Box>\n          <Divider />\n          <Box className={classes.details}>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.proposalsLeft} proposals left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.templatesLeft} templates`}\n              </Typography>\n            </div>\n            <div>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.invitesLeft} invites left`}\n              </Typography>\n              <Typography\n                variant=\"body2\"\n                color=\"textPrimary\"\n              >\n                {`${subscription.adsLeft} ads left`}\n              </Typography>\n            </div>\n            <div>\n              {subscription.hasAnalytics && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Analytics dashboard\n                </Typography>\n              )}\n              {subscription.hasEmailAlerts && (\n                <Typography\n                  variant=\"body2\"\n                  color=\"textPrimary\"\n                >\n                  Email alerts\n                </Typography>\n              )}\n            </div>\n          </Box>\n        </Paper>\n        <Box\n          mt={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            size=\"small\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Upgrade plan\n          </Button>\n        </Box>\n        <Box mt={2}>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n          >\n            The refunds don&apos;t work once you have the subscription, but you can\n            always\n            {' '}\n            <Link\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"#\"\n            >\n              Cancel your subscription\n            </Link>\n            .\n          </Typography>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscription.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Subscription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Notifications({ className, ...rest }) {\n  const classes = useStyles();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // Make API request\n    await wait(500);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader title=\"Notifications\" />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                System\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        variant=\"body1\"\n                        color=\"textPrimary\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography variant=\"caption\">\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                gutterBottom\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                You will recieve emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox defaultChecked />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          p={2}\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n        >\n          <Button\n            color=\"secondary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n}\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Security({ className, ...rest }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: ''\n      }}\n      validationSchema={Yup.object().shape({\n        password: Yup.string()\n          .min(7, 'Must be at least 7 characters')\n          .max(255)\n          .required('Required'),\n        passwordConfirm: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            variant: 'success'\n          });\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Card\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box mt={3}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              p={2}\n              display=\"flex\"\n              justifyContent=\"flex-end\"\n            >\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nSecurity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Security;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tab,\n  Tabs,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport General from './General';\nimport Subscription from './Subscription';\nimport Notifications from './Notifications';\nimport Security from './Security';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction AccountView() {\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('general');\n  const tabs = [\n    { value: 'general', label: 'General' },\n    { value: 'subscription', label: 'Subscription' },\n    { value: 'notifications', label: 'Notifications' },\n    { value: 'security', label: 'Security' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            value={currentTab}\n            variant=\"scrollable\"\n            textColor=\"secondary\"\n            className={classes.tabs}\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'general' && <General />}\n          {currentTab === 'subscription' && <Subscription />}\n          {currentTab === 'notifications' && <Notifications />}\n          {currentTab === 'security' && <Security />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default AccountView;\n"],"sourceRoot":""}