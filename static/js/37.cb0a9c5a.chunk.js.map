{"version":3,"sources":["hooks/useIsMountedRef.js","utils/getInitials.js","utils/bytesToSize.js","components/FilesDropzone.js","views/projects/ProjectDetailsView/Header/Application.js","views/projects/ProjectDetailsView/Header/index.js","views/projects/ProjectDetailsView/Overview/Brief.js","views/projects/ProjectDetailsView/Overview/Holder.js","views/projects/ProjectDetailsView/Overview/Members.js","views/projects/ProjectDetailsView/Overview/index.js","views/projects/ProjectDetailsView/Files/FileCard.js","views/projects/ProjectDetailsView/Files/index.js","views/projects/ProjectDetailsView/Activities/Activity.js","views/projects/ProjectDetailsView/Activities/index.js","views/projects/ProjectDetailsView/Subscribers/SubscriberCard.js","views/projects/ProjectDetailsView/Subscribers/index.js","views/projects/ProjectDetailsView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","name","replace","split","slice","map","v","toUpperCase","join","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","useStyles","makeStyles","theme","root","dropZone","border","palette","divider","padding","spacing","outline","display","justifyContent","flexWrap","alignItems","backgroundColor","action","hover","opacity","cursor","dragActive","active","image","width","info","marginTop","list","maxHeight","actions","marginLeft","FilesDropzone","className","rest","classes","useState","files","setFiles","handleDrop","useCallback","acceptedFiles","console","prevFiles","concat","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","clsx","alt","src","gutterBottom","variant","mt","color","underline","length","options","suppressScrollX","file","key","primary","primaryTypographyProps","secondary","bytesToSize","size","title","edge","onClick","helperText","textAlign","marginRight","Application","author","open","onClose","onApply","value","setValue","enqueueSnackbar","useSnackbar","Dialog","maxWidth","Typography","align","Box","TextField","autoFocus","FormHelperTextProps","fullWidth","label","multiline","onChange","event","persist","target","placeholder","rows","Avatar","avatar","getInitials","ml","bio","p","Button","defaultProps","badge","margin","badgeIcon","marginBottom","actionIcon","Header","project","openApplication","setOpenApplication","handleApplicationClose","Grid","container","justify","item","mx","SvgIcon","fontSize","component","moment","endDate","fromNow","price","markdown","fontFamily","typography","Brief","Card","CardContent","xs","md","tags","tag","Chip","source","brief","header","paddingBottom","content","paddingTop","listItem","Holder","CardHeader","RouterLink","to","disableTypography","subheader","Link","List","ListItem","disableGutters","deadline","format","currency","updatedAt","Members","members","titleTypographyProps","member","id","ListItemAvatar","ListItemText","Divider","CardActions","Overview","lg","xl","media","height","colors","blueGrey","insertDriveFileIcon","getAppIcon","marignRight","menu","FileCard","moreRef","openMenu","setOpenMenu","mimeType","includes","CardMedia","url","Tooltip","IconButton","ref","Menu","anchorEl","anchorOrigin","vertical","horizontal","paper","elevation","transformOrigin","MenuItem","ListItemIcon","Files","sm","card","flexGrow","date","flexShrink","common","white","avatarBlue","blue","avatarGreen","green","avatarOrange","orange","avatarIndigo","indigo","avatarsMap","upload_file","icon","GetAppIcon","join_team","PersonAddIcon","price_change","AttachMoneyIcon","contest_created","DashboardIcon","Activity","activity","type","subject","description","createdAt","group","position","top","left","Activities","activities","todayItems","lastWeekItems","isSame","push","chip","SubscriberCard","subscriber","cover","mb","commonContacts","my","labels","Subscribers","subscribers","background","dark","minHeight","ProjectDetailsView","isMountedRef","currentTab","setCurrentTab","setProject","getProject","axios","get","then","response","data","Page","Container","Tabs","scrollButtons","textColor","tab","Tab"],"mappings":"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","file":"static/js/37.cb0a9c5a.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","/* eslint-disable no-restricted-properties */\nexport default (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useDropzone } from \"react-dropzone\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Button,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport bytesToSize from \"src/utils/bytesToSize\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: \"pointer\",\n    },\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5,\n  },\n  image: {\n    width: 130,\n  },\n  info: {\n    marginTop: theme.spacing(1),\n  },\n  list: {\n    maxHeight: 320,\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nfunction FilesDropzone({ className, ...rest }) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    console.log(\"acceptedFiles\", acceptedFiles);\n    setFiles((prevFiles) => [...prevFiles].concat(acceptedFiles));\n  }, []);\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <div\n        className={clsx({\n          [classes.dropZone]: true,\n          [classes.dragActive]: isDragActive,\n        })}\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <div>\n          <img\n            alt=\"Select file\"\n            className={classes.image}\n            src=\"/static/images/undraw_add_file2_gvbb.svg\"\n          />\n        </div>\n        <div>\n          <Typography gutterBottom variant=\"h3\">\n            Select files\n          </Typography>\n          <Box mt={2}>\n            <Typography color=\"textPrimary\" variant=\"body1\">\n              Drop files here or click <Link underline=\"always\">browse</Link>{\" \"}\n              thorough your machine\n            </Typography>\n          </Box>\n        </div>\n      </div>\n      {files.length > 0 && (\n        <>\n          <PerfectScrollbar options={{ suppressScrollX: true }}>\n            <List className={classes.list}>\n              {files.map((file, i) => (\n                <ListItem divider={i < files.length - 1} key={i}>\n                  <ListItemIcon>\n                    <FileCopyIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={file.name}\n                    primaryTypographyProps={{ variant: \"h5\" }}\n                    secondary={bytesToSize(file.size)}\n                  />\n                  <Tooltip title=\"More options\">\n                    <IconButton edge=\"end\">\n                      <MoreIcon />\n                    </IconButton>\n                  </Tooltip>\n                </ListItem>\n              ))}\n            </List>\n          </PerfectScrollbar>\n          <div className={classes.actions}>\n            <Button onClick={handleRemoveAll} size=\"small\">\n              Remove all\n            </Button>\n            <Button color=\"secondary\" size=\"small\" variant=\"contained\">\n              Upload files\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default FilesDropzone;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Dialog,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  helperText: {\n    textAlign: 'right',\n    marginRight: 0\n  }\n}));\n\nfunction Application({\n  author,\n  open,\n  onClose,\n  onApply,\n  className,\n  ...rest\n}) {\n  const [value, setValue] = useState('');\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (event) => {\n    event.persist();\n    setValue(event.target.value);\n  };\n\n  const handleApply = () => {\n    enqueueSnackbar('Request sent', {\n      variant: 'success'\n    });\n    onApply();\n  };\n\n  return (\n    <Dialog\n      maxWidth=\"lg\"\n      onClose={onClose}\n      open={open}\n    >\n      <div\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <Typography\n          align=\"center\"\n          className={classes.title}\n          gutterBottom\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          The project owner requires an introduction\n        </Typography>\n        <Typography\n          align=\"center\"\n          variant=\"subtitle2\"\n          color=\"textSecondary\"\n        >\n          Write down a short note with your application regarding why you\n          think you&apos;d be a good fit for this position.\n        </Typography>\n        <Box mt={3}>\n          <TextField\n            autoFocus\n            FormHelperTextProps={{ classes: { root: classes.helperText } }}\n            fullWidth\n            helperText={`${200 - value.length} characters left`}\n            label=\"Short Note\"\n            multiline\n            onChange={handleChange}\n            placeholder=\"What excites you about this project?\"\n            rows={5}\n            value={value}\n            variant=\"outlined\"\n          />\n          <Box\n            mt={6}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            <Avatar\n              alt=\"Author\"\n              src={author.avatar}\n            >\n              {getInitials(author.name)}\n            </Avatar>\n            <Box ml={2}>\n              <Typography\n                variant=\"h3\"\n                color=\"textPrimary\"\n              >\n                {author.name}\n              </Typography>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textPrimary\"\n              >\n                {author.bio}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        <Box\n          mt={3}\n          p={3}\n        >\n          <Button\n            onClick={handleApply}\n            variant=\"contained\"\n            fullWidth\n            color=\"primary\"\n          >\n            Apply for a role\n          </Button>\n        </Box>\n      </div>\n    </Dialog>\n  );\n}\n\nApplication.propTypes = {\n  author: PropTypes.object.isRequired,\n  className: PropTypes.string,\n  onApply: PropTypes.func,\n  onClose: PropTypes.func,\n  open: PropTypes.bool.isRequired\n};\n\nApplication.defaultProps = {\n  onApply: () => {},\n  onClose: () => {}\n};\n\nexport default Application;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Grid,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Share2 as ShareIcon,\n  Check as CheckIcon,\n  Calendar as CalendarIcon,\n  AlertTriangle as AlertIcon,\n  DollarSign as DollarSignIcon,\n  Send as SendIcon\n} from 'react-feather';\nimport Application from './Application';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  badge: {\n    display: 'flex',\n    alignItems: 'center',\n    margin: theme.spacing(2)\n  },\n  badgeIcon: {\n    marginRight: theme.spacing(1)\n  },\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [openApplication, setOpenApplication] = useState(false);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {project.title}\n        </Typography>\n        <Box\n          mx={-2}\n          display=\"flex\"\n          color=\"text.secondary\"\n          alignItems=\"center\"\n          flexWrap=\"wrap\"\n        >\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              {project.active ? <CheckIcon /> : <AlertIcon /> }\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {project.active ? 'Active' : 'Inactive'}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <CalendarIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Ending ${moment(project.endDate).fromNow()}`}\n            </Typography>\n          </div>\n          <div className={classes.badge}>\n            <SvgIcon\n              fontSize=\"small\"\n              className={classes.badgeIcon}\n            >\n              <DollarSignIcon />\n            </SvgIcon>\n            <Typography\n              variant=\"body2\"\n              color=\"inherit\"\n              component=\"span\"\n            >\n              {`Budget: ${project.price}`}\n            </Typography>\n          </div>\n        </Box>\n      </Grid>\n      <Grid item>\n        <Button className={classes.action}>\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <ShareIcon />\n          </SvgIcon>\n          Share\n        </Button>\n        <Button\n          className={classes.action}\n          onClick={handleApplicationOpen}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <SendIcon />\n          </SvgIcon>\n          Apply for a role\n        </Button>\n        <Application\n          author={project.author}\n          onApply={handleApplicationClose}\n          onClose={handleApplicationClose}\n          open={openApplication}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Chip,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Markdown from 'react-markdown/with-html';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  markdown: {\n    fontFamily: theme.typography.fontFamily,\n    '& p': {\n      marginBottom: theme.spacing(2)\n    }\n  }\n}));\n\nfunction Brief({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n            md={6}\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textSecondary\"\n            >\n              Project Name\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n              {project.title}\n            </Typography>\n            <Box mt={3}>\n              <Typography\n                variant=\"subtitle2\"\n                color=\"textSecondary\"\n              >\n                Technology Stack\n              </Typography>\n              <Box mt={1}>\n                {project.tags.map((tag) => (\n                  <Chip\n                    key={tag}\n                    variant=\"outlined\"\n                    label={tag}\n                  />\n                ))}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box mt={3}>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textSecondary\"\n          >\n            Description\n          </Typography>\n          <Markdown\n            source={project.brief}\n            className={classes.markdown}\n          />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n\nBrief.propTypes = {\n  project: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Brief;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  CardHeader,\n  Link,\n  List,\n  ListItem,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  listItem: {\n    padding: theme.spacing(2, 0),\n    justifyContent: 'space-between'\n  }\n}));\n\nfunction Holder({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        avatar={(\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={project.author.avatar}\n            to=\"#\"\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n        )}\n        className={classes.header}\n        disableTypography\n        subheader={(\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            underline=\"none\"\n            variant=\"h6\"\n          >\n            {project.author.name}\n          </Link>\n        )}\n        title={(\n          <Typography\n            display=\"block\"\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Contest holder\n          </Typography>\n        )}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Deadline\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.deadline).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Per Project\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {project.price}\n              {' '}\n              {project.currency}\n            </Typography>\n          </ListItem>\n          <ListItem\n            className={classes.listItem}\n            disableGutters\n            divider\n          >\n            <Typography\n              variant=\"subtitle2\"\n              color=\"textPrimary\"\n            >\n              Last Update\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              {moment(project.updatedAt).format('DD MMM YYYY')}\n            </Typography>\n          </ListItem>\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nHolder.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Holder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  }\n}));\n\nfunction Members({ members, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        className={classes.header}\n        title=\"Project members\"\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {members.map((member) => (\n            <ListItem\n              disableGutters\n              key={member.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Author\"\n                  className={classes.avatar}\n                  src={member.avatar}\n                >\n                  {getInitials(member.name)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={member.name}\n                primaryTypographyProps={{ variant: 'h6' }}\n                secondary={member.bio}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          Manage users\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMembers.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\n\nexport default Members;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Brief from './Brief';\nimport Holder from './Holder';\nimport Members from './Members';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Overview({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      <Grid\n        item\n        lg={8}\n        xl={9}\n        xs={12}\n      >\n        <Brief project={project} />\n      </Grid>\n      <Grid\n        item\n        lg={4}\n        xl={3}\n        xs={12}\n      >\n        <Members members={project.members} />\n        <Box mt={3}>\n          <Holder project={project} />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default Overview;\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Divider,\n  IconButton,\n  ListItemIcon,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFileOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport ArchiveIcon from '@material-ui/icons/ArchiveOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport bytesToSize from 'src/utils/bytesToSize';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 240\n  },\n  placeholder: {\n    height: 240,\n    backgroundColor: colors.blueGrey[50],\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  insertDriveFileIcon: {\n    height: theme.spacing(6),\n    width: theme.spacing(6),\n    fontSize: theme.spacing(6)\n  },\n  content: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  getAppIcon: {\n    marignRight: theme.spacing(1)\n  },\n  menu: {\n    width: 250,\n    maxWidth: '100%'\n  }\n}));\n\nfunction FileCard({ file, className, ...rest }) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {file.mimeType.includes('image/') ? (\n        <CardMedia\n          className={classes.media}\n          image={file.url}\n        />\n      ) : (\n        <div className={classes.placeholder}>\n          <InsertDriveFileIcon className={classes.insertDriveFileIcon} />\n        </div>\n      )}\n      <CardContent className={classes.content}>\n        <div>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            {file.name}\n          </Typography>\n          <Typography\n            variant=\"subtitle2\"\n            color=\"textPrimary\"\n          >\n            {bytesToSize(file.size)}\n          </Typography>\n        </div>\n        <div>\n          <Tooltip title=\"More options\">\n            <IconButton\n              edge=\"end\"\n              onClick={handleMenuOpen}\n              ref={moreRef}\n              size=\"small\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n        </div>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button fullWidth>\n          <GetAppIcon className={classes.getAppIcon} />\n          Download\n        </Button>\n      </CardActions>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        classes={{ paper: classes.menu }}\n        onClose={handleMenuClose}\n        elevation={1}\n        open={openMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem divider>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Rename\" />\n        </MenuItem>\n        <MenuItem divider>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </Card>\n  );\n}\n\nFileCard.propTypes = {\n  className: PropTypes.string,\n  file: PropTypes.object.isRequired\n};\n\nexport default FileCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport FilesDropzone from 'src/components/FilesDropzone';\nimport FileCard from './FileCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Files({ files, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardContent>\n          <FilesDropzone />\n        </CardContent>\n      </Card>\n      <Grid\n        container\n        spacing={3}\n      >\n        {files.map((file) => (\n          <Grid\n            item\n            key={file.id}\n            lg={4}\n            md={4}\n            sm={6}\n            xs={12}\n          >\n            <FileCard file={file} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nFiles.propTypes = {\n  className: PropTypes.string,\n  files: PropTypes.array.isRequired\n};\n\nexport default Files;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Card,\n  Typography,\n  Link,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  card: {\n    marginLeft: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    padding: theme.spacing(2),\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: 'auto',\n    flexShrink: 0\n  },\n  avatar: {\n    color: colors.common.white\n  },\n  avatarBlue: {\n    backgroundColor: colors.blue[500]\n  },\n  avatarGreen: {\n    backgroundColor: colors.green[500]\n  },\n  avatarOrange: {\n    backgroundColor: colors.orange[500]\n  },\n  avatarIndigo: {\n    backgroundColor: colors.indigo[500]\n  }\n}));\n\nconst avatarsMap = {\n  upload_file: {\n    icon: GetAppIcon,\n    className: 'avatarBlue'\n  },\n  join_team: {\n    icon: PersonAddIcon,\n    className: 'avatarOrange'\n  },\n  price_change: {\n    icon: AttachMoneyIcon,\n    className: 'avatarGreen'\n  },\n  contest_created: {\n    icon: DashboardIcon,\n    className: 'avatarIndigo'\n  }\n};\n\nfunction Activity({ activity, className, ...rest }) {\n  const classes = useStyles();\n  const avatar = avatarsMap[activity.type];\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar className={clsx(classes.avatar, classes[avatar.className])}>\n        <avatar.icon />\n      </Avatar>\n      <Card className={classes.card}>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n        >\n          <Link\n            color=\"textPrimary\"\n            component={RouterLink}\n            to=\"#\"\n            variant=\"h6\"\n          >\n            {activity.subject}\n          </Link>\n          {' '}\n          {activity.description}\n        </Typography>\n        <Typography\n          className={classes.date}\n          variant=\"caption\"\n        >\n          {moment(activity.createdAt).fromNow()}\n        </Typography>\n      </Card>\n    </div>\n  );\n}\n\nActivity.propTypes = {\n  activity: PropTypes.object.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport clsx from 'clsx';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport Activity from './Activity';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    marginBottom: theme.spacing(3)\n  },\n  group: {\n    '& + &': {\n      marginTop: theme.spacing(4)\n    }\n  },\n  activity: {\n    position: 'relative',\n    '& + &': {\n      marginTop: theme.spacing(3),\n      '&:before': {\n        position: 'absolute',\n        content: '\" \"',\n        height: 20,\n        width: 1,\n        top: -20,\n        left: 20,\n        backgroundColor: theme.palette.divider\n      }\n    }\n  }\n}));\n\nfunction Activities({ activities, className, ...rest }) {\n  const classes = useStyles();\n  const todayItems = [];\n  const lastWeekItems = [];\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const activity of activities) {\n    if (moment(activity.createdAt).isSame(moment(), 'day')) {\n      todayItems.push(activity);\n    } else {\n      lastWeekItems.push(activity);\n    }\n  }\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        className={classes.title}\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Today\n      </Typography>\n      <div className={classes.group}>\n        {todayItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n      <div className={classes.group}>\n        <Typography\n          className={classes.title}\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Last week\n        </Typography>\n        {lastWeekItems.map((activity) => (\n          <Activity\n            activity={activity}\n            className={classes.activity}\n            key={activity.id}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nActivities.propTypes = {\n  activities: PropTypes.array.isRequired,\n  className: PropTypes.string\n};\n\nexport default Activities;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Chip,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 125\n  },\n  content: {\n    paddingTop: 0\n  },\n  avatar: {\n    height: 64,\n    width: 64\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\n\nfunction SubscriberCard({ subscriber, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardMedia\n        className={classes.media}\n        image={subscriber.cover}\n      />\n      <CardContent className={classes.content}>\n        <Box\n          mt={-4}\n          mb={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <Avatar\n            alt=\"Subscriber\"\n            className={classes.avatar}\n            component={RouterLink}\n            src={subscriber.avatar}\n            to=\"#\"\n          />\n        </Box>\n        <Link\n          align=\"center\"\n          color=\"textPrimary\"\n          component={RouterLink}\n          display=\"block\"\n          to=\"#\"\n          underline=\"none\"\n          variant=\"h6\"\n        >\n          {subscriber.name}\n        </Link>\n        <Typography\n          align=\"center\"\n          variant=\"body2\"\n          color=\"textSecondary\"\n        >\n          {subscriber.commonContacts}\n          {' '}\n          contacts in common\n        </Typography>\n        <Box my={2}>\n          <Divider />\n        </Box>\n        {subscriber.labels.map((label) => (\n          <Chip\n            key={label}\n            className={classes.chip}\n            label={label}\n            variant=\"outlined\"\n          />\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n\nSubscriberCard.propTypes = {\n  className: PropTypes.string,\n  subscriber: PropTypes.object.isRequired\n};\n\nexport default SubscriberCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Grid, makeStyles } from '@material-ui/core';\nimport SubscriberCard from './SubscriberCard';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Subscribers({ subscribers, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      spacing={3}\n      {...rest}\n    >\n      {subscribers.map((subscriber) => (\n        <Grid\n          item\n          key={subscriber.id}\n          lg={4}\n          xs={12}\n        >\n          <SubscriberCard subscriber={subscriber} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nSubscribers.propTypes = {\n  className: PropTypes.string,\n  subscribers: PropTypes.array.isRequired\n};\n\nexport default Subscribers;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  Divider,\n  Tabs,\n  Tab,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Overview from './Overview';\nimport Files from './Files';\nimport Activities from './Activities';\nimport Subscribers from './Subscribers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nfunction ProjectDetailsView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [currentTab, setCurrentTab] = useState('overview');\n  const [project, setProject] = useState(null);\n  const tabs = [\n    { value: 'overview', label: 'Overview' },\n    { value: 'files', label: 'Files' },\n    { value: 'activity', label: 'Activity' },\n    { value: 'subscribers', label: 'Subscribers' }\n  ];\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  const getProject = useCallback(() => {\n    axios\n      .get('/api/projects/projects/1')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProject(response.data.project);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProject();\n  }, [getProject]);\n\n  if (!project) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Project Details\"\n    >\n      <Container maxWidth=\"lg\">\n        <Header project={project} />\n        <Box mt={3}>\n          <Tabs\n            onChange={handleTabsChange}\n            scrollButtons=\"auto\"\n            textColor=\"secondary\"\n            value={currentTab}\n            variant=\"scrollable\"\n          >\n            {tabs.map((tab) => (\n              <Tab\n                key={tab.value}\n                label={tab.label}\n                value={tab.value}\n              />\n            ))}\n          </Tabs>\n        </Box>\n        <Divider />\n        <Box mt={3}>\n          {currentTab === 'overview' && <Overview project={project} />}\n          {currentTab === 'files' && <Files files={project.files} />}\n          {currentTab === 'activity' && <Activities activities={project.activities} />}\n          {currentTab === 'subscribers' && <Subscribers subscribers={project.subscribers} />}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectDetailsView;\n"],"sourceRoot":""}