{"version":3,"sources":["hooks/useIsMountedRef.js","components/Label.js","utils/getInitials.js","components/GenericMoreButton.js","views/reports/DashboardAlternativeView/CustomerActivity.js","views/reports/DashboardAlternativeView/EarningsSegmentation/Chart.js","views/reports/DashboardAlternativeView/EarningsSegmentation/index.js","views/reports/DashboardAlternativeView/FinancialStats/Chart.js","views/reports/DashboardAlternativeView/FinancialStats/index.js","views/reports/DashboardAlternativeView/Header.js","views/reports/DashboardAlternativeView/LatestOrders.js","views/reports/DashboardAlternativeView/MostProfitableProducts/CircularProgress.js","views/reports/DashboardAlternativeView/MostProfitableProducts/index.js","views/reports/DashboardAlternativeView/Overview.js","views/reports/DashboardAlternativeView/TopReferrals.js","views/reports/DashboardAlternativeView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","className","children","rest","style","classes","clsx","defaultProps","name","replace","split","slice","map","v","toUpperCase","join","menu","width","maxWidth","memo","props","moreRef","useState","openMenu","setOpenMenu","title","onClick","ref","anchorEl","anchorOrigin","vertical","horizontal","onClose","open","PaperProps","transformOrigin","item","borderRight","divider","CustomerActivity","isMountedRef","activities","setActivities","getActivities","useCallback","axios","get","then","response","data","Card","CardHeader","action","GenericMoreButton","Divider","Box","Typography","align","variant","component","gutterBottom","List","disablePadding","activity","i","ListItem","length","key","id","ListItemAvatar","Avatar","alt","RouterLink","src","customer","avatar","to","getInitials","ListItemText","disableTypography","Link","underline","description","noWrap","moment","createdAt","fromNow","Chart","dataProp","useTheme","datasets","dataset","borderWidth","borderColor","background","default","hoverBorderColor","labels","options","responsive","maintainAspectRatio","animation","cutoutPercentage","legend","layout","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","dark","titleFontColor","text","bodyFontColor","footerFontColor","callbacks","label","tooltipItem","_data","index","value","textAlign","flexDirection","EarningsSegmentation","earnings","setEarnings","getEarnings","p","position","minHeight","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","lastYear","cornerRadius","scales","xAxes","gridLines","drawBorder","ticks","fontColor","yAxes","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","yLabel","chart","FinancialStats","pt","pr","pl","timeRanges","actionIcon","marginRight","Header","actionRef","isMenuOpen","setMenuOpen","timeRange","setTimeRange","Grid","container","justify","Breadcrumbs","separator","aria-label","Button","SvgIcon","Menu","getContentAnchorEl","t","MenuItem","labelColors","complete","pending","rejected","navigateNextIcon","marginLeft","LatestOrders","orders","setOrders","getOrders","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","active","direction","TableBody","order","hover","items","currency","status","format","size","circle1","stroke","type","fill","strokeWidth","circle2","strokeDasharray","CircularProgress","viewBox","d","image","subscriptions","colors","green","MostProfitableProducts","products","setProducts","getProducts","product","ml","price","mr","progress","breakpoints","up","down","borderBottom","valueContainer","Overview","overview","md","sm","xs","fontWeightBold","common","white","TopReferrals","referrals","setReferrals","getReferrals","referral","initials","primaryTypographyProps","paddingTop","paddingBottom","paddingLeft","paddingRight","DashboardAlternativeView","Page","Container","lg","xl"],"mappings":"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","file":"static/js/40.403b0a19.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import React, {\n  useRef,\n  useState,\n  memo\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItemIcon,\n  ListItemText,\n  Tooltip,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport AchiveIcon from '@material-ui/icons/ArchiveOutlined';\n\nconst useStyles = makeStyles(() => ({\n  menu: {\n    width: 256,\n    maxWidth: '100%'\n  }\n}));\n\nfunction GenericMoreButton(props) {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          {...props}\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <MoreIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{ className: classes.menu }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <GetAppIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <PictureAsPdfIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <AchiveIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Achive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n\nGenericMoreButton.propTypes = {\n  className: PropTypes.string\n};\n\nexport default memo(GenericMoreButton);\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction CustomerActivity({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [activities, setActivities] = useState(null);\n\n  const getActivities = useCallback(() => {\n    axios\n      .get('/api/reports/customer-activity')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setActivities(response.data.activities);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getActivities();\n  }, [getActivities]);\n\n  if (!activities) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Customer Activity\"\n        action={<GenericMoreButton />}\n      />\n      <Divider />\n      <Box display=\"flex\">\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            15,245\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Registered\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.item}>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            357\n          </Typography>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Online\n          </Typography>\n        </div>\n      </Box>\n      <Divider />\n      <List disablePadding>\n        {activities.map((activity, i) => (\n          <ListItem\n            divider={i < activities.length - 1}\n            key={activity.id}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt=\"Customer\"\n                component={RouterLink}\n                src={activity.customer.avatar}\n                to=\"#\"\n              >\n                {getInitials(activity.customer.name)}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={(\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"#\"\n                  underline=\"none\"\n                  variant=\"h6\"\n                >\n                  {activity.customer.name}\n                </Link>\n              )}\n              secondary={(\n                <Typography\n                  variant=\"body2\"\n                  color=\"textSecondary\"\n                >\n                  {activity.description}\n                </Typography>\n              )}\n            />\n            <Typography\n              color=\"textSecondary\"\n              noWrap\n              variant=\"caption\"\n            >\n              {moment(activity.createdAt).fromNow()}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useTheme } from '@material-ui/core';\n\nfunction Chart({ data: dataProp, ...rest }) {\n  const theme = useTheme();\n\n  const data = {\n    datasets: dataProp.datasets.map(((dataset) => ({\n      ...dataset,\n      borderWidth: 8,\n      borderColor: theme.palette.background.default,\n      hoverBorderColor: theme.palette.background.default\n    }))),\n    labels: dataProp.labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cutoutPercentage: 80,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        label(tooltipItem, _data) {\n          const label = _data.labels[tooltipItem.index];\n          const value = _data.datasets[0].data[tooltipItem.index];\n\n          return `${label}: ${value}%`;\n        }\n      }\n    }\n  };\n\n  return (\n    <Doughnut\n      data={data}\n      options={options}\n      {...rest}\n    />\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired\n};\n\nexport default Chart;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    textAlign: 'center',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [earnings, setEarnings] = useState(null);\n\n  const getEarnings = useCallback(() => {\n    axios\n      .get('/api/reports/earnings')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEarnings(response.data.earnings);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEarnings();\n  }, [getEarnings]);\n\n  if (!earnings) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <Box\n        p={3}\n        position=\"relative\"\n        minHeight={320}\n      >\n        <Chart data={earnings} />\n      </Box>\n      <Divider />\n      <Box display=\"flex\">\n        {earnings.labels.map((label, i) => (\n          <div\n            key={label}\n            className={classes.item}\n          >\n            <Typography\n              variant=\"h4\"\n              color=\"textPrimary\"\n            >\n              {earnings.datasets[0].data[i]}\n              %\n            </Typography>\n            <Typography\n              variant=\"overline\"\n              color=\"textSecondary\"\n            >\n              {label}\n            </Typography>\n          </div>\n        ))}\n      </Box>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  fade,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({\n  data: dataProp,\n  labels,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.secondary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: fade(theme.palette.secondary.main, 0.25),\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: (value) => (value > 0 ? `${value}K` : value)\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.background.dark,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: (tooltipItem) => {\n          let label = `Sales: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  chart: {\n    height: 400\n  }\n}));\n\nfunction FinancialStats({ className, ...rest }) {\n  const classes = useStyles();\n  const stats = {\n    thisYear: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20],\n    lastYear: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n  };\n  const labels = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Financial Stats\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box\n          minWidth={700}\n          pt={4}\n          pr={2}\n          pl={2}\n        >\n          <Chart\n            className={classes.chart}\n            data={stats}\n            labels={labels}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nFinancialStats.propTypes = {\n  className: PropTypes.string\n};\n\nexport default FinancialStats;\n","import React, { useRef, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  Menu,\n  MenuItem,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { Calendar as CalendarIcon } from 'react-feather';\n\nconst timeRanges = [\n  {\n    value: 'today',\n    text: 'Today'\n  },\n  {\n    value: 'yesterday',\n    text: 'Yesterday'\n  },\n  {\n    value: 'last_30_days',\n    text: 'Last 30 days'\n  },\n  {\n    value: 'last_year',\n    text: 'Last year'\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const actionRef = useRef(null);\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const [timeRange, setTimeRange] = useState(timeRanges[2].text);\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Reports\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Finance Overview\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          ref={actionRef}\n          onClick={() => setMenuOpen(true)}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <CalendarIcon />\n          </SvgIcon>\n          {timeRange}\n        </Button>\n        <Menu\n          anchorEl={actionRef.current}\n          onClose={() => setMenuOpen(false)}\n          open={isMenuOpen}\n          PaperProps={{ className: classes.menu }}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}\n        >\n          {timeRanges.map((t) => (\n            <MenuItem\n              key={t.value}\n              onClick={() => setTimeRange(t.text)}\n            >\n              {t.text}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React, {\n  useCallback,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst labelColors = {\n  complete: 'success',\n  pending: 'warning',\n  rejected: 'error'\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction LatestOrders({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [orders, setOrders] = useState(null);\n\n  const getOrders = useCallback(() => {\n    axios\n      .get('/api/reports/latest-orders')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setOrders(response.data.orders);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getOrders();\n  }, [getOrders]);\n\n  if (!orders) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Latest Orders\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Order ID\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Items\n                </TableCell>\n                <TableCell>\n                  Total\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Date\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>{order.ref}</TableCell>\n                  <TableCell>{order.customer.name}</TableCell>\n                  <TableCell>{order.items}</TableCell>\n                  <TableCell>\n                    {order.currency}\n                    {order.value}\n                  </TableCell>\n                  <TableCell>\n                    <Label color={labelColors[order.status]}>\n                      {order.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(order.createdAt).format('DD MMM, YYYY hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"/app/management/orders\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 56,\n    height: 56\n  },\n  circle1: {\n    stroke: theme.palette.type === 'dark' ? 'rgba(0,0,0,0.15)' : 'rgba(0,0,0,0.05)',\n    fill: 'none',\n    strokeWidth: 4\n  },\n  circle2: {\n    stroke: theme.palette.secondary.main,\n    fill: 'none',\n    strokeWidth: 4,\n    animation: '$progress 1s ease-out forwards'\n  },\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nfunction CircularProgress({ value, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <svg viewBox=\"0 0 36 36\">\n        <path\n          className={classes.circle1}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <path\n          className={classes.circle2}\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </div>\n  );\n}\n\nCircularProgress.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  image: {\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  navigateNextIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MostProfitableProducts({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [products, setProducts] = useState(null);\n\n  const getProducts = useCallback(() => {\n    axios\n      .get('/api/reports/profitable-products')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setProducts(response.data.products);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  if (!products) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        alt=\"Product\"\n                        className={classes.image}\n                        src={product.image}\n                      />\n                      <Box ml={2}>\n                        <Typography\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          <span className={classes.subscriptions}>\n                            {product.subscriptions}\n                          </span>\n                          {' '}\n                          Active\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      Price\n                    </Typography>\n                    <Typography\n                      noWrap\n                      variant=\"body2\"\n                      color=\"textSecondary\"\n                    >\n                      <span className={classes.value}>\n                        {product.currency}\n                        {product.price}\n                      </span>\n                      {' '}\n                      monthly\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      display=\"flex\"\n                      alignItems=\"center\"\n                      justifyContent=\"flex-end\"\n                    >\n                      <Box mr={2}>\n                        <Typography\n                          align=\"right\"\n                          variant=\"h6\"\n                          color=\"textPrimary\"\n                        >\n                          {product.progress}\n                          %\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.progress} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        p={2}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        <Button\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n        >\n          See all\n          <NavigateNextIcon className={classes.navigateNextIcon} />\n        </Button>\n      </Box>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Card,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    padding: theme.spacing(3),\n    textAlign: 'center',\n    [theme.breakpoints.up('md')]: {\n      '&:not(:last-of-type)': {\n        borderRight: `1px solid ${theme.palette.divider}`\n      }\n    },\n    [theme.breakpoints.down('sm')]: {\n      '&:not(:last-of-type)': {\n        borderBottom: `1px solid ${theme.palette.divider}`\n      }\n    }\n  },\n  valueContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction Overview({ className, ...rest }) {\n  const classes = useStyles();\n  const overview = {\n    income: '854,355.00',\n    expanses: '373,250.50',\n    profit: '123,532.00',\n    subscriptions: '26,000'\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n      >\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Income\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.income}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +25%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Total Expanses\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              $\n              {overview.expanses}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"success\"\n            >\n              +12%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Net Profit\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.profit}\n            </Typography>\n            <Label\n              className={classes.label}\n              color=\"error\"\n            >\n              -20%\n            </Label>\n          </div>\n        </Grid>\n        <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n            color=\"textSecondary\"\n          >\n            Active Subscriptions\n          </Typography>\n          <div className={classes.valueContainer}>\n            <Typography\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {overview.subscriptions}\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nOverview.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Overview;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nfunction TopReferrals({ className, ...rest }) {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState(null);\n\n  const getReferrals = useCallback(() => {\n    axios\n      .get('/api/reports/top-referrals')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setReferrals(response.data.referrals);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  if (!referrals) {\n    return null;\n  }\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                size=\"small\"\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {referral.value}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport CustomerActivity from './CustomerActivity';\nimport EarningsSegmentation from './EarningsSegmentation';\nimport FinancialStats from './FinancialStats';\nimport Header from './Header';\nimport LatestOrders from './LatestOrders';\nimport MostProfitableProducts from './MostProfitableProducts';\nimport Overview from './Overview';\nimport TopReferrals from './TopReferrals';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  container: {\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 64,\n      paddingRight: 64\n    }\n  }\n}));\n\nfunction DashboardAlternativeView() {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard Alternative\"\n    >\n      <Container\n        maxWidth={false}\n        className={classes.container}\n      >\n        <Header />\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n            <Overview />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xl={9}\n            xs={12}\n          >\n            <FinancialStats />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xl={3}\n            xs={12}\n          >\n            <EarningsSegmentation />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <CustomerActivity />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            xs={12}\n          >\n            <MostProfitableProducts />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            xs={12}\n          >\n            <TopReferrals />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nexport default DashboardAlternativeView;\n"],"sourceRoot":""}