{"version":3,"sources":["hooks/useIsMountedRef.js","utils/wait.js","views/calendar/CalendarView/Header.js","views/calendar/CalendarView/Toolbar.js","views/calendar/CalendarView/AddEditEventModal/AddEditEventForm.js","views/calendar/CalendarView/AddEditEventModal/index.js","views/calendar/CalendarView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","wait","time","Promise","res","setTimeout","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","actionIcon","marginRight","Header","className","onEventAdd","rest","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","onClick","SvgIcon","defaultProps","viewOptions","label","value","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","Toolbar","date","view","onDatePrev","onDateNext","onViewChange","onDateToday","alignItems","ButtonGroup","size","Hidden","smDown","moment","format","map","viewOption","Icon","Tooltip","key","title","IconButton","confirmButton","AddEditEventForm","event","mode","onAdd","onCancel","onDelete","onEdit","enqueueSnackbar","useSnackbar","initialValues","allDay","description","end","start","validationSchema","Yup","shape","max","when","schema","min","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","data","id","uuidv4","success","submit","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldTouched","setFieldValue","touched","Box","p","align","gutterBottom","TextField","error","Boolean","fullWidth","helperText","name","onBlur","onChange","mt","FormControlLabel","control","Switch","checked","DateTimePicker","inputVariant","FormHelperText","Divider","display","flexGrow","type","disabled","AddEditEventModal","open","Dialog","maxWidth","onClose","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","calendar","borderColor","divider","default","typography","body2","body1","h6","subtitle2","fontWeight","fontWeightMedium","text","secondary","padding","main","contrastText","borderWidth","opacity","subtitle1","CalendarView","calendarRef","isMountedRef","useTheme","mobileDevice","useMediaQuery","breakpoints","down","useState","setView","toDate","setDate","events","setEvents","modal","setModal","resetModal","getEvents","useCallback","axios","get","then","response","calendarEl","calendarApi","getApi","newView","changeView","Page","Container","add","next","getDate","prev","today","Paper","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","arg","find","e","eventDrop","prevEvents","prevEvent","eventLimit","eventResizableFromStart","eventResize","header","height","ref","rerenderDelay","select","unselect","selectable","weekends","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","eventId","filter"],"mappings":"gKAAA,6CAEe,SAASA,IACtB,IAAMC,EAAYC,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdF,EAAUG,SAAU,KACnB,IAEIH,I,kCCPMI,IAFK,SAACC,GAAD,OAAU,IAAIC,SAAQ,SAACC,GAAD,OAASC,WAAWD,EAAKF,Q,kYCgB7DI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNC,OAAQ,CACNC,aAAcH,EAAMI,QAAQ,GAC5B,QAAS,CACPC,WAAYL,EAAMI,QAAQ,KAG9BE,WAAY,CACVC,YAAaP,EAAMI,QAAQ,QAI/B,SAASI,EAAT,GAII,IAHFC,EAGC,EAHDA,UACAC,EAEC,EAFDA,WACGC,EACF,0CACKC,EAAUd,IAEhB,OACE,kBAACe,EAAA,EAAD,eACEJ,UAAWK,YAAKF,EAAQX,KAAMQ,GAC9BM,WAAS,EACTC,QAAQ,gBACRZ,QAAS,GACLO,GAEJ,kBAACE,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACC,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEX,kBAACC,EAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,UACNC,GAAG,OACHC,UAAWC,KAJb,aAQA,kBAACC,EAAA,EAAD,CACEL,QAAQ,QACRC,MAAM,eAFR,aAOF,kBAACI,EAAA,EAAD,CACEL,QAAQ,KACRC,MAAM,eAFR,4BAOF,kBAACX,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACY,EAAA,EAAD,CACEL,MAAM,YACND,QAAQ,YACRO,QAASpB,EACTD,UAAWG,EAAQV,QAEnB,kBAAC6B,EAAA,EAAD,CACEX,SAAS,QACTX,UAAWG,EAAQN,YAEnB,kBAAC,IAAD,OAVJ,eAwBRE,EAAOwB,aAAe,CACpBtB,WAAY,cAGCF,Q,oHCjFTyB,EAAc,CAClB,CACEC,MAAO,QACPC,MAAO,eACPC,KAAMC,KAER,CACEH,MAAO,OACPC,MAAO,eACPC,KAAME,KAER,CACEJ,MAAO,MACPC,MAAO,cACPC,KAAMG,KAER,CACEL,MAAO,SACPC,MAAO,WACPC,KAAMI,MAIJ1C,EAAYC,aAAW,iBAAO,CAClCE,KAAM,OA6EOwC,OA1Ef,YAUI,IATFC,EASC,EATDA,KACAC,EAQC,EARDA,KACAC,EAOC,EAPDA,WACAC,EAMC,EANDA,WAEAC,GAIC,EALDpC,WAKC,EAJDoC,cACAC,EAGC,EAHDA,YACAtC,EAEC,EAFDA,UACGE,EACF,+GACKC,EAAUd,IAEhB,OACE,kBAACe,EAAA,EAAD,eACEJ,UAAWK,YAAKF,EAAQX,KAAMQ,IAC1BE,EAFN,CAGEqC,WAAW,SACXjC,WAAS,EACTC,QAAQ,gBACRZ,QAAS,IAET,kBAACS,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACgC,EAAA,EAAD,CAAaC,KAAK,SAChB,kBAACrB,EAAA,EAAD,CAAQC,QAASc,GAAjB,QACA,kBAACf,EAAA,EAAD,CAAQC,QAASiB,GAAjB,SACA,kBAAClB,EAAA,EAAD,CAAQC,QAASe,GAAjB,UAGJ,kBAACM,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACvC,EAAA,EAAD,CAAMI,MAAI,GACR,kBAACW,EAAA,EAAD,CACEL,QAAQ,KACRC,MAAM,eAEL6B,IAAOX,GAAMY,OAAO,eAGzB,kBAACzC,EAAA,EAAD,CAAMI,MAAI,GACPgB,EAAYsB,KAAI,SAACC,GAChB,IAAMC,EAAOD,EAAWpB,KAExB,OACE,kBAACsB,EAAA,EAAD,CACEC,IAAKH,EAAWrB,MAChByB,MAAOJ,EAAWtB,OAElB,kBAAC2B,EAAA,EAAD,CACErC,MAAOgC,EAAWrB,QAAUQ,EAAO,YAAc,UACjDb,QAAS,kBAAMgB,EAAaU,EAAWrB,SAEvC,kBAACsB,EAAD,e,0KCzEZ3D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACN6D,cAAe,CACbzD,WAAYL,EAAMI,QAAQ,QAI9B,SAAS2D,GAAT,GAOI,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,SACAC,EACC,EADDA,OAEMzD,EAAUd,KACRwE,EAAoBC,yBAApBD,gBAER,OACE,kBAAC,KAAD,CACEE,cAAe,CACbC,OAAQT,EAAMS,SAAU,EACxBjD,MAAOwC,EAAMxC,OAAS,GACtBkD,YAAaV,EAAMU,aAAe,GAClCC,IAAKX,EAAMW,KAAOtB,MAClBuB,MAAOZ,EAAMY,OAASvB,MACtBO,MAAOI,EAAMJ,OAAS,IAExBiB,iBAAkBC,OAAaC,MAAM,CACnCN,OAAQK,OACRJ,YAAaI,OAAaE,IAAI,KAC9BL,IAAKG,OACFG,KACC,SACA,SAACL,EAAOM,GAAR,OAAoBN,GAASM,EAAOC,IAAIP,EAAO,6CAEnDA,MAAOE,OACPlB,MAAOkB,OAAaE,IAAI,KAAKI,SAAS,uBAExCC,SAAQ,yCAAE,WAAOC,EAAP,2BAAAC,EAAA,6DACRC,EADQ,EACRA,UACAC,EAFQ,EAERA,UACAC,EAHQ,EAGRA,UACAC,EAJQ,EAIRA,cAJQ,SAOAC,EAPA,eAQDN,GARC,SAcA7F,aAAK,KAdL,OAkBJmG,EAAKC,GADM,QAAT5B,EACQ6B,eAEA9B,EAAM6B,GAGlBL,IACAE,EAAU,CAAEK,SAAS,IACrBJ,GAAc,GACdrB,EAAgB,gBAAiB,CAC/B/C,QAAS,YAGE,QAAT0C,EACFC,EAAM0B,GAENvB,EAAOuB,GAjCH,kDAoCNF,EAAU,CAAEK,SAAS,IACrBN,EAAU,CAAEO,OAAQ,KAAMC,UAC1BN,GAAc,GAtCR,0DAAF,0DA0CP,gBACCO,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,gBACAC,EAPD,EAOCA,cACAC,EARD,EAQCA,QACAnB,EATD,EASCA,OATD,OAWC,0BAAMD,SAAUgB,GACd,kBAACK,EAAA,EAAD,CAAKC,EAAG,GACN,kBAAC/E,EAAA,EAAD,CACEgF,MAAM,SACNC,cAAY,EACZtF,QAAQ,KACRC,MAAM,eAEI,QAATyC,EAAiB,YAAc,eAGpC,kBAACyC,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACG,GAAA,EAAD,CACEC,MAAOC,QAAQP,EAAQ7C,OAASsC,EAAOtC,OACvCqD,WAAS,EACTC,WAAYT,EAAQ7C,OAASsC,EAAOtC,MACpC1B,MAAM,QACNiF,KAAK,QACLC,OAAQjB,EACRkB,SAAUjB,EACVjE,MAAOmD,EAAO1B,MACdrC,QAAQ,aAEV,kBAACmF,EAAA,EAAD,CAAKY,GAAI,GACP,kBAACR,GAAA,EAAD,CACEC,MAAOC,QAAQP,EAAQ/B,aAAewB,EAAOxB,aAC7CuC,WAAS,EACTC,WAAYT,EAAQ/B,aAAewB,EAAOxB,YAC1CxC,MAAM,cACNiF,KAAK,cACLC,OAAQjB,EACRkB,SAAUjB,EACVjE,MAAOmD,EAAOZ,YACdnD,QAAQ,cAGZ,kBAACmF,EAAA,EAAD,CAAKY,GAAI,GACP,kBAACC,GAAA,EAAD,CACEC,QACE,kBAACC,GAAA,EAAD,CACEC,QAASpC,EAAOb,OAChB0C,KAAK,SACLE,SAAUjB,IAGdlE,MAAM,aAGV,kBAACwE,EAAA,EAAD,CAAKY,GAAI,GACP,kBAACK,GAAA,EAAD,CACEV,WAAS,EACTW,aAAa,WACb1F,MAAM,aACNiF,KAAK,QACLrF,QAAS,kBAAMyE,EAAgB,QAC/Bc,SAAU,SAAC3E,GAAD,OAAU8D,EAAc,QAAS9D,IAC3CP,MAAOmD,EAAOV,SAGlB,kBAAC8B,EAAA,EAAD,CAAKY,GAAI,GACP,kBAACK,GAAA,EAAD,CACEV,WAAS,EACTW,aAAa,WACb1F,MAAM,WACNiF,KAAK,MACLrF,QAAS,kBAAMyE,EAAgB,QAC/Bc,SAAU,SAAC3E,GAAD,OAAU8D,EAAc,MAAO9D,IACzCP,MAAOmD,EAAOX,OAGjBqC,QAAQP,EAAQ9B,KAAOuB,EAAOvB,MAC7B,kBAAC+B,EAAA,EAAD,CAAKY,GAAI,GACP,kBAACO,GAAA,EAAD,CAAgBd,OAAK,GAClBb,EAAOvB,OAKhB,kBAACmD,GAAA,EAAD,MACA,kBAACpB,EAAA,EAAD,CACEC,EAAG,EACHoB,QAAQ,OACR/E,WAAW,UAED,SAATiB,GACC,kBAACJ,EAAA,EAAD,CAAY/B,QAAS,kBAAMsC,EAASJ,EAAM6B,MACxC,kBAAC9D,EAAA,EAAD,KACE,kBAAC,KAAD,QAIN,kBAAC2E,EAAA,EAAD,CAAKsB,SAAU,IACf,kBAACnG,EAAA,EAAD,CAAQC,QAASqC,GAAjB,UAGA,kBAACtC,EAAA,EAAD,CACEN,QAAQ,YACR0G,KAAK,SACLC,SAAU5B,EACV9E,MAAM,YACNf,UAAWG,EAAQkD,eALrB,gBAyBZC,GAAiB/B,aAAe,CAC9BgC,MAAO,GACPE,MAAO,aACPC,SAAU,aACVC,SAAU,aACVC,OAAQ,cAGKN,UC/Of,SAASoE,GAAT,GASI,IARFnE,EAQC,EARDA,MACAC,EAOC,EAPDA,KACAC,EAMC,EANDA,MACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,OACA+D,EAEC,EAFDA,KACGzH,EACF,8EACD,OACE,kBAAC0H,GAAA,EAAD,eACEC,SAAS,KACTrB,WAAS,EACTsB,QAASpE,EACTiE,KAAMA,GACFzH,GAGHyH,GACC,kBAAC,GAAD,CACEpE,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,OAAQA,KAiBlB8D,GAAkBnG,aAAe,CAC/BgC,MAAO,GACPE,MAAO,aACPC,SAAU,aACVC,SAAU,aACVC,OAAQ,aACR+D,MAAM,GAGOD,UCzBTrI,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJuI,gBAAiBxI,EAAMyI,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,WAAY7I,EAAMI,QAAQ,GAC1B0I,cAAe9I,EAAMI,QAAQ,IAE/B2I,SAAU,CACR,oBAAqB,CACnBC,YAAahJ,EAAMyI,QAAQQ,SAE7B,oBAAqB,CACnBD,YAAahJ,EAAMyI,QAAQQ,SAE7B,6BAA8B,CAC5BT,gBAAiBxI,EAAMyI,QAAQC,WAAWC,MAE5C,aAAc,CACZH,gBAAiBxI,EAAMyI,QAAQC,WAAWC,MAE5C,aAAc,CACZH,gBAAiBxI,EAAMyI,QAAQC,WAAWQ,SAE5C,aAAa,eACRlJ,EAAMmJ,WAAWC,OAEtB,uBAAuB,eAClBpJ,EAAMmJ,WAAWC,OAEtB,wBAAwB,eACnBpJ,EAAMmJ,WAAWE,OAEtB,0BAA0B,eACrBrJ,EAAMmJ,WAAWG,IAEtB,yBAAyB,eACpBtJ,EAAMmJ,WAAWG,IAEtB,WAAY,CACVN,YAAahJ,EAAMyI,QAAQQ,SAE7B,mBAAmB,eACdjJ,EAAMmJ,WAAWI,UADtB,CAEEC,WAAYxJ,EAAMmJ,WAAWM,iBAC7BjI,MAAOxB,EAAMyI,QAAQiB,KAAKC,UAC1BC,QAAS5J,EAAMI,QAAQ,GACvBoI,gBAAiBxI,EAAMyI,QAAQC,WAAWC,OAE5C,gBAAgB,eACX3I,EAAMmJ,WAAWC,OAEtB,kBAAmB,CACjBZ,gBAAiBxI,EAAMyI,QAAQC,WAAWC,MAE5C,cAAe,CACbH,gBAAiBxI,EAAMyI,QAAQkB,UAAUE,KACzCrI,MAAOxB,EAAMyI,QAAQkB,UAAUG,aAC/BC,YAAa,EACbC,QAAS,GACT,aAAa,eACRhK,EAAMmJ,WAAWG,GADtB,CAEE9H,MAAO,YAET,cAAc,eACTxB,EAAMmJ,WAAWE,MADtB,CAEE7H,MAAO,aAGX,mBAAmB,eACdxB,EAAMmJ,WAAWc,gBA6PXC,UAxPf,WACE,IAAMtJ,EAAUd,KACVqK,EAAc7K,iBAAO,MACrB8K,EAAehL,cACfY,EAAQqK,cACRC,EAAeC,YAAcvK,EAAMwK,YAAYC,KAAK,OALpC,EAMEC,mBAASJ,EAAe,WAAa,gBANvC,mBAMf3H,EANe,KAMTgI,EANS,OAOED,mBAASrH,MAASuH,UAPpB,mBAOflI,EAPe,KAOTmI,EAPS,OAQMH,mBAAS,MARf,mBAQfI,EARe,KAQPC,EARO,OASIL,mBAAS,CACjC1G,MAAO,KACPC,KAAM,KACNmE,MAAM,IAZc,mBASf4C,EATe,KASRC,EATQ,KAehBC,EAAa,WACjBD,EAAS,CACPjH,MAAO,KACPC,KAAM,KACNmE,MAAM,KAwIJ+C,EAAYC,uBAAY,WAC5BC,IACGC,IAAI,iBACJC,MAAK,SAACC,GACDpB,EAAa5K,SACfuL,EAAUS,EAAS5F,KAAKkF,aAG7B,CAACV,IAkBJ,OAhBA7K,qBAAU,WACR4L,MACC,CAACA,IAEJ5L,qBAAU,WACR,IAAMkM,EAAatB,EAAY3K,QAE/B,GAAIiM,EAAY,CACd,IAAMC,EAAcD,EAAWE,SACzBC,EAAUtB,EAAe,WAAa,eAE5CoB,EAAYG,WAAWD,GACvBjB,EAAQiB,MAET,CAACtB,IAECQ,EAKH,kBAACgB,EAAA,EAAD,CACErL,UAAWG,EAAQX,KACnB2D,MAAM,YAEN,kBAACmI,EAAA,EAAD,CAAWzD,UAAU,GACnB,kBAAC,EAAD,CAAQ5H,WA5Hc,WAC1BuK,EAAS,CACPhH,KAAM,MACNmE,MAAM,EACNpE,MAAO,CACLS,QAAQ,EACRC,YAAa,GACbC,IAAKtB,MAAS2I,IAAI,GAAI,WAAWpB,SACjChG,MAAOvB,MAASuH,SAChBhH,MAAO,SAoHP,kBAAC,GAAD,CACElB,KAAMA,EACNG,WA1Ie,WACrB,IAAM4I,EAAatB,EAAY3K,QAE/B,GAAIiM,EAAY,CACd,IAAMC,EAAcD,EAAWE,SAE/BD,EAAYO,OACZpB,EAAQa,EAAYQ,aAoIhBtJ,WAtJe,WACrB,IAAM6I,EAAatB,EAAY3K,QAE/B,GAAIiM,EAAY,CACd,IAAMC,EAAcD,EAAWE,SAE/BD,EAAYS,OACZtB,EAAQa,EAAYQ,aAgJhBnJ,YA7KgB,WACtB,IAAM0I,EAAatB,EAAY3K,QAE/B,GAAIiM,EAAY,CACd,IAAMC,EAAcD,EAAWE,SAE/BD,EAAYU,QACZvB,EAAQa,EAAYQ,aAuKhBpJ,aAnKiB,SAAC8I,GACxB,IAAMH,EAAatB,EAAY3K,QAE3BiM,IACkBA,EAAWE,SAEnBE,WAAWD,GACvBjB,EAAQiB,KA6JJjJ,KAAMA,IAER,kBAAC0J,EAAA,EAAD,CACE5L,UAAWG,EAAQmI,SACnBrH,UAAWgF,IACXY,GAAI,EACJX,EAAG,GAEH,kBAAC,IAAD,CACE2F,wBAAsB,EACtBC,YAAa7J,EACb8J,YAAa7J,EACb8J,WAAS,EACTC,UAAQ,EACRC,WAnGgB,SAACC,GACzB,IAAM5I,EAAQ8G,EAAO+B,MAAK,SAACC,GAAD,OAAOA,EAAEjH,KAAO+G,EAAI5I,MAAM6B,MAEpDoF,EAAS,CACPjH,MAAM,eAAMA,GACZC,KAAM,OACNmE,MAAM,KA8FA2E,UAzEc,SAAC,GAAe,IAAb/I,EAAY,EAAZA,MAGzB+G,GAAU,SAACiC,GAAD,OAAgBA,EAAWzJ,KAAI,SAAC0J,GAAD,OAAgBA,EAAUpH,KAAO7B,EAAM6B,GAAvB,eACpDoH,EADoD,CAEvDxI,OAAQT,EAAMS,OACdG,MAAOZ,EAAMY,MACbD,IAAKX,EAAMW,MACRsI,SAkEGC,YAAU,EACVC,yBAAuB,EACvBC,YAtFgB,SAAC,GAAe,IAAbpJ,EAAY,EAAZA,MAE3B+G,GAAU,SAACiC,GAAD,OAAgBA,EAAWzJ,KAAI,SAAC0J,GAAD,OAAgBA,EAAUpH,KAAO7B,EAAM6B,GAAvB,eACpDoH,EADoD,CAEvDxI,OAAQT,EAAMS,OACdG,MAAOZ,EAAMY,MACbD,IAAKX,EAAMW,MACRsI,SAgFGnC,OAAQA,EACRuC,QAAQ,EACRC,OAAQ,IACRC,IAAKpD,EACLqD,cAAe,GACfC,OA7IgB,SAACb,GACzB,IAAMnB,EAAatB,EAAY3K,QAE3BiM,GACkBA,EAAWE,SAEnB+B,WAGdzC,EAAS,CACPjH,MAAO,CACLS,OAAQmI,EAAInI,OACZC,YAAa,GACbC,IAAKiI,EAAIjI,IACTC,MAAOgI,EAAIhI,MACXhB,MAAO,IAETK,KAAM,MACNmE,MAAM,KA4HAuF,YAAU,EACVC,UAAQ,EACRC,QAAS,CACPC,IACAC,IACAC,IACAC,IACAC,QAIN,kBAAC,GAAD,CACElK,MAAOgH,EAAMhH,MACbC,KAAM+G,EAAM/G,KACZC,MAtIe,SAACF,GACtB+G,GAAU,SAACiC,GAAD,4BAAoBA,GAApB,CAAgChJ,OAC1CkH,KAqIM/G,SAvFiB,WACvB+G,KAuFM9G,SAnIkB,SAAC+J,GACzBpD,GAAU,SAACiC,GAAD,OAAgBA,EAAWoB,QAAO,SAACnB,GAAD,OAAeA,EAAUpH,KAAOsI,QAC5EjD,KAkIM7G,OArHgB,SAACL,GACvB+G,GAAU,SAACiC,GAAD,OAAgBA,EAAWzJ,KAAI,SAAC0J,GAAD,OACvCA,EAAUpH,KAAO7B,EAAM6B,GAAK7B,EAAQiJ,QAEtC/B,KAkHM9C,KAAM4C,EAAM5C,SA3DX","file":"static/js/48.e40ee0e4.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","export const wait = (time) => new Promise((res) => setTimeout(res, time));\n\nexport default wait;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Breadcrumbs,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusCircleIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  actionIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({\n  className,\n  onEventAdd,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Calendar\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Here&apos;s what you planned\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onEventAdd}\n          className={classes.action}\n        >\n          <SvgIcon\n            fontSize=\"small\"\n            className={classes.actionIcon}\n          >\n            <PlusCircleIcon />\n          </SvgIcon>\n          New Event\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  onEventAdd: PropTypes.func\n};\n\nHeader.defaultProps = {\n  onEventAdd: () => {}\n};\n\nexport default Header;\n","import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\n\nconst viewOptions = [\n  {\n    label: 'Month',\n    value: 'dayGridMonth',\n    icon: ViewConfigIcon\n  },\n  {\n    label: 'Week',\n    value: 'timeGridWeek',\n    icon: ViewWeekIcon\n  },\n  {\n    label: 'Day',\n    value: 'timeGridDay',\n    icon: ViewDayIcon\n  },\n  {\n    label: 'Agenda',\n    value: 'listWeek',\n    icon: ViewAgendaIcon\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      {...rest}\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n    >\n      <Grid item>\n        <ButtonGroup size=\"small\">\n          <Button onClick={onDatePrev}>Prev</Button>\n          <Button onClick={onDateToday}>Today</Button>\n          <Button onClick={onDateNext}>Next</Button>\n        </ButtonGroup>\n      </Grid>\n      <Hidden smDown>\n        <Grid item>\n          <Typography\n            variant=\"h3\"\n            color=\"textPrimary\"\n          >\n            {moment(date).format('MMMM YYYY')}\n          </Typography>\n        </Grid>\n        <Grid item>\n          {viewOptions.map((viewOption) => {\n            const Icon = viewOption.icon;\n\n            return (\n              <Tooltip\n                key={viewOption.value}\n                title={viewOption.label}\n              >\n                <IconButton\n                  color={viewOption.value === view ? 'secondary' : 'default'}\n                  onClick={() => onViewChange(viewOption.value)}\n                >\n                  <Icon />\n                </IconButton>\n              </Tooltip>\n            );\n          })}\n        </Grid>\n      </Hidden>\n    </Grid>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Switch,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { DateTimePicker } from '@material-ui/pickers';\nimport { Trash as TrashIcon } from 'react-feather';\nimport wait from 'src/utils/wait';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  confirmButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nfunction AddEditEventForm({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit\n}) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        allDay: event.allDay || false,\n        color: event.color || '',\n        description: event.description || '',\n        end: event.end || moment(),\n        start: event.start || moment(),\n        title: event.title || ''\n      }}\n      validationSchema={Yup.object().shape({\n        allDay: Yup.bool(),\n        description: Yup.string().max(5000),\n        end: Yup.date()\n          .when(\n            'start',\n            (start, schema) => (start && schema.min(start, 'End date must be later than start date')),\n          ),\n        start: Yup.date(),\n        title: Yup.string().max(255).required('Title is required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          const data = {\n            ...values\n          };\n\n          // Make API request depending on mode type\n          // If editting an event, here should make a patch request\n          // else a post request\n          await wait(200);\n\n          // On post request server should return an ID\n          if (mode === 'add') {\n            data.id = uuidv4();\n          } else {\n            data.id = event.id;\n          }\n\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Saved changes', {\n            variant: 'success'\n          });\n\n          if (mode === 'add') {\n            onAdd(data);\n          } else {\n            onEdit(data);\n          }\n        } catch (error) {\n          setStatus({ success: false });\n          setErrors({ submit: error.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldTouched,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box p={3}>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h3\"\n              color=\"textPrimary\"\n            >\n              {mode === 'add' ? 'Add Event' : 'Edit Event'}\n            </Typography>\n          </Box>\n          <Box p={3}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Title\"\n              name=\"title\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.title}\n              variant=\"outlined\"\n            />\n            <Box mt={2}>\n              <TextField\n                error={Boolean(touched.description && errors.description)}\n                fullWidth\n                helperText={touched.description && errors.description}\n                label=\"Description\"\n                name=\"description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.description}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box mt={2}>\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={values.allDay}\n                    name=\"allDay\"\n                    onChange={handleChange}\n                  />\n                )}\n                label=\"All day\"\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"Start date\"\n                name=\"start\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('start', date)}\n                value={values.start}\n              />\n            </Box>\n            <Box mt={2}>\n              <DateTimePicker\n                fullWidth\n                inputVariant=\"outlined\"\n                label=\"End date\"\n                name=\"end\"\n                onClick={() => setFieldTouched('end')}\n                onChange={(date) => setFieldValue('end', date)}\n                value={values.end}\n              />\n            </Box>\n            {Boolean(touched.end && errors.end) && (\n              <Box mt={2}>\n                <FormHelperText error>\n                  {errors.end}\n                </FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box\n            p={2}\n            display=\"flex\"\n            alignItems=\"center\"\n          >\n            {mode === 'edit' && (\n              <IconButton onClick={() => onDelete(event.id)}>\n                <SvgIcon>\n                  <TrashIcon />\n                </SvgIcon>\n              </IconButton>\n            )}\n            <Box flexGrow={1} />\n            <Button onClick={onCancel}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              disabled={isSubmitting}\n              color=\"secondary\"\n              className={classes.confirmButton}\n            >\n              Confirm\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func\n};\n\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {}\n};\n\nexport default AddEditEventForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport AddEditEventForm from './AddEditEventForm';\n\nfunction AddEditEventModal({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit,\n  open,\n  ...rest\n}) {\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      fullWidth\n      onClose={onCancel}\n      open={open}\n      {...rest}\n    >\n      {/* Dialog renders its body even if not open */}\n      {open && (\n        <AddEditEventForm\n          event={event}\n          mode={mode}\n          onAdd={onAdd}\n          onCancel={onCancel}\n          onDelete={onDelete}\n          onEdit={onEdit}\n        />\n      )}\n    </Dialog>\n  );\n}\n\nAddEditEventModal.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']),\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  open: PropTypes.bool\n};\n\nAddEditEventModal.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {},\n  open: false\n};\n\nexport default AddEditEventModal;\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect\n} from 'react';\nimport moment from 'moment';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport {\n  Box,\n  Container,\n  Paper,\n  useTheme,\n  useMediaQuery,\n  makeStyles\n} from '@material-ui/core';\nimport '@fullcalendar/core/main.css';\nimport '@fullcalendar/daygrid/main.css';\nimport '@fullcalendar/timegrid/main.css';\nimport '@fullcalendar/list/main.css';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Page from 'src/components/Page';\nimport Header from './Header';\nimport Toolbar from './Toolbar';\nimport AddEditEventModal from './AddEditEventModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  calendar: {\n    '& .fc-unthemed th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-unthemed td.fc-today': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-head': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-body': {\n      backgroundColor: theme.palette.background.default\n    },\n    '& .fc-axis': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-time': {\n      ...theme.typography.body2\n    },\n    '& .fc-list-item-title': {\n      ...theme.typography.body1\n    },\n    '& .fc-list-heading-main': {\n      ...theme.typography.h6\n    },\n    '& .fc-list-heading-alt': {\n      ...theme.typography.h6\n    },\n    '& .fc th': {\n      borderColor: theme.palette.divider\n    },\n    '& .fc-day-header': {\n      ...theme.typography.subtitle2,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-day-top': {\n      ...theme.typography.body2\n    },\n    '& .fc-highlight': {\n      backgroundColor: theme.palette.background.dark\n    },\n    '& .fc-event': {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n      borderWidth: 2,\n      opacity: 0.9,\n      '& .fc-time': {\n        ...theme.typography.h6,\n        color: 'inherit'\n      },\n      '& .fc-title': {\n        ...theme.typography.body1,\n        color: 'inherit'\n      }\n    },\n    '& .fc-list-empty': {\n      ...theme.typography.subtitle1\n    }\n  }\n}));\n\nfunction CalendarView() {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const isMountedRef = useIsMountedRef();\n  const theme = useTheme();\n  const mobileDevice = useMediaQuery(theme.breakpoints.down('sm'));\n  const [view, setView] = useState(mobileDevice ? 'listWeek' : 'dayGridMonth');\n  const [date, setDate] = useState(moment().toDate());\n  const [events, setEvents] = useState(null);\n  const [modal, setModal] = useState({\n    event: null,\n    mode: null,\n    open: false\n  });\n\n  const resetModal = () => {\n    setModal({\n      event: null,\n      mode: null,\n      open: false\n    });\n  };\n\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleEventAddClick = () => {\n    setModal({\n      mode: 'add',\n      open: true,\n      event: {\n        allDay: false,\n        description: '',\n        end: moment().add(30, 'minutes').toDate(),\n        start: moment().toDate(),\n        title: ''\n      }\n    });\n  };\n\n  const handleSlotsSelect = (arg) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.unselect();\n    }\n\n    setModal({\n      event: {\n        allDay: arg.allDay,\n        description: '',\n        end: arg.end,\n        start: arg.start,\n        title: ''\n      },\n      mode: 'add',\n      open: true\n    });\n  };\n\n  const handleEventAdd = (event) => {\n    setEvents((prevEvents) => [...prevEvents, event]);\n    resetModal();\n  };\n\n  const handleEventDelete = (eventId) => {\n    setEvents((prevEvents) => prevEvents.filter((prevEvent) => prevEvent.id !== eventId));\n    resetModal();\n  };\n\n  const handleEventSelect = (arg) => {\n    const event = events.find((e) => e.id === arg.event.id);\n\n    setModal({\n      event: { ...event },\n      mode: 'edit',\n      open: true\n    });\n  };\n\n  const handleEventEdit = (event) => {\n    setEvents((prevEvents) => prevEvents.map((prevEvent) => (\n      prevEvent.id === event.id ? event : prevEvent\n    )));\n    resetModal();\n  };\n\n  const handleEventResize = ({ event }) => {\n    // Call API to update the event in database\n    setEvents((prevEvents) => prevEvents.map((prevEvent) => (prevEvent.id === event.id ? ({\n      ...prevEvent,\n      allDay: event.allDay,\n      start: event.start,\n      end: event.end\n    }) : prevEvent)));\n  };\n\n  const handleEventDrop = ({ event }) => {\n    // If you add a droppable area, check if event dropped inside or outside of calendar\n    // Call API to update the event in database\n    setEvents((prevEvents) => prevEvents.map((prevEvent) => (prevEvent.id === event.id ? ({\n      ...prevEvent,\n      allDay: event.allDay,\n      start: event.start,\n      end: event.end\n    }) : prevEvent)));\n  };\n\n  const handleModalClose = () => {\n    resetModal();\n  };\n\n  const getEvents = useCallback(() => {\n    axios\n      .get('/api/calendar')\n      .then((response) => {\n        if (isMountedRef.current) {\n          setEvents(response.data.events);\n        }\n      });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [mobileDevice]);\n\n  if (!events) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Calendar\"\n    >\n      <Container maxWidth={false}>\n        <Header onEventAdd={handleEventAddClick} />\n        <Toolbar\n          date={date}\n          onDateNext={handleDateNext}\n          onDatePrev={handleDatePrev}\n          onDateToday={handleDateToday}\n          onViewChange={handleViewChange}\n          view={view}\n        />\n        <Paper\n          className={classes.calendar}\n          component={Box}\n          mt={3}\n          p={2}\n        >\n          <FullCalendar\n            allDayMaintainDuration\n            defaultDate={date}\n            defaultView={view}\n            droppable\n            editable\n            eventClick={handleEventSelect}\n            eventDrop={handleEventDrop}\n            eventLimit\n            eventResizableFromStart\n            eventResize={handleEventResize}\n            events={events}\n            header={false}\n            height={800}\n            ref={calendarRef}\n            rerenderDelay={10}\n            select={handleSlotsSelect}\n            selectable\n            weekends\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              listPlugin,\n              timelinePlugin\n            ]}\n          />\n        </Paper>\n        <AddEditEventModal\n          event={modal.event}\n          mode={modal.mode}\n          onAdd={handleEventAdd}\n          onCancel={handleModalClose}\n          onDelete={handleEventDelete}\n          onEdit={handleEventEdit}\n          open={modal.open}\n        />\n      </Container>\n    </Page>\n  );\n}\n\nexport default CalendarView;\n"],"sourceRoot":""}