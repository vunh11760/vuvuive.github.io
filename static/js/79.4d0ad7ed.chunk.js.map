{"version":3,"sources":["hooks/useIsMountedRef.js","services/imageService.js","actions/imageActions.js","../node_modules/@material-ui/core/esm/Card/Card.js","utils/getInitials.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/icons/ArrowDropDown.js","../node_modules/@material-ui/icons/ViewModule.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","views/management/ImageView/ProjectCard.js","views/management/ImageView/Results.js","views/management/ImageView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","imageService","uploadImage","values","Promise","resolve","reject","axios","post","imageName","imageSoure","then","response","status","data","error","catch","getAllImage","get","uploadImageRequest","payload","onSuccess","onError","dispatch","a","result","getAllImageRequest","list","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","replace","split","slice","map","v","toUpperCase","join","MEDIA_COMPONENTS","CardMedia","children","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ToggleButton","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$disableRipple","disableRipple","onChange","onClick","selected","_props$size","size","ButtonBase","capitalize","focusRipple","event","isDefaultPrevented","label","theme","typography","button","boxSizing","borderRadius","shape","height","padding","border","fade","palette","action","active","color","backgroundColor","borderLeft","marginLeft","textDecoration","text","primary","alignItems","justifyContent","sizeSmall","fontSize","pxToRem","sizeLarge","ToggleButtonGroup","_props$exclusive","exclusive","handleChange","buttonValue","newValue","index","_toConsumableArray","splice","handleExclusiveChange","role","child","_child$props","buttonSelected","candidate","Array","isArray","isValueSelected","grouped","background","paper","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedSizeSmall","groupedSizeLarge","useStyles","makeStyles","dark","likedButton","colors","red","subscribersIcon","spacing","marginRight","modal","boxShadow","shadows","ProjectCard","project","handleDelete","rest","useHistory","useState","isLiked","likes","open","setOpen","handleClose","Box","p","py","px","textAlign","Grid","container","justify","flexGrow","item","type","class","Divider","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","id","flex","data-dismiss","aria-label","aria-hidden","title","position","bottom","left","content","main","sortButton","textTransform","letterSpacing","Results","projects","getProjects","useDispatch","enqueueSnackbar","useSnackbar","sortRef","openSort","setOpenSort","selectedSort","setSelectedSort","mode","setMode","deleteProjectRequest","_id","res","variant","flexWrap","mb","Typography","length","Button","key","md","sm","xs","mt","Pagination","count","Menu","anchorEl","menu","option","MenuItem","ListItemText","minHeight","paddingTop","paddingBottom","ProjectListView","isMountedRef","setProjects","isLoading","setLoading","useCallback","console","log","Page","Container","maxWidth","CircularProgress"],"mappings":"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","file":"static/js/79.4d0ad7ed.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import jwtDecode from \"jwt-decode\";\nimport axios from \"src/utils/axios\";\n\nclass ImageService {\n  uploadImage = (values) =>\n    new Promise((resolve, reject) => {\n      axios\n        .post(\"/blog/image/upload\", {\n          imageName: values.imageName,\n          imageSoure: values.imageSoure,\n        })\n        .then((response) => {\n          if (response.status === 200) {\n            resolve(response.data);\n          } else {\n            reject(response.data.error);\n          }\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  getAllImage = (values) =>\n    new Promise((resolve, reject) => {\n      axios\n        .get(\"/image/all\")\n        .then((response) => {\n          if (response.status === 200) {\n            resolve(response.data);\n          } else {\n            reject(response.data.error);\n          }\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n}\n\nconst imageService = new ImageService();\n\nexport default imageService;\n","import axios from \"src/utils/axios\";\nimport imageService from \"src/services/imageService\";\nexport function uploadImageRequest(payload, onSuccess, onError) {\n  return async (dispatch) => {\n    try {\n      const result = await imageService.uploadImage(payload);\n      if (typeof onSuccess === \"function\") onSuccess(result);\n      return result;\n    } catch (error) {\n      if (typeof onError === \"function\") onError(error);\n      throw error;\n    }\n  };\n}\nexport function getAllImageRequest(onSuccess, onError) {\n  return async (dispatch) => {\n    try {\n      const list = await imageService.getAllImage();\n      onSuccess(list.data);\n    } catch (error) {\n      onError(error);\n      throw error;\n    }\n  };\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Component for rendering image.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\"\n}), 'ViewModule');\n\nexports.default = _default;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      height: 48,\n      padding: '0px 12px',\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 40,\n      padding: '0px 8px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      height: 56,\n      padding: '0px 16px',\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$disableRipple = props.disableRipple,\n      disableRipple = _props$disableRipple === void 0 ? false : _props$disableRipple,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"disableRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    disableRipple: disableRipple,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      borderRadius: theme.shape.borderRadius,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {\n      padding: '0px 11px 0px 12px',\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `size=\"small\"`. */\n    groupedSizeSmall: {\n      padding: '0px 7px 0px 8px'\n    },\n\n    /* Styles applied to the children if `size=\"large\"`. */\n    groupedSizeLarge: {\n      padding: '0px 15px 0px 16px'\n    }\n  };\n};\nvar ToggleButtonGroup = React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = _toConsumableArray(value);\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? [].concat(_toConsumableArray(value), [buttonValue]) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: \"group\"\n  }, other), React.Children.map(children, function (child) {\n    if (!React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: the ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var _child$props = child.props,\n        buttonSelected = _child$props.selected,\n        buttonValue = _child$props.value;\n    var selected = buttonSelected === undefined ? isValueSelected(buttonValue, value) : buttonSelected;\n    return React.cloneElement(child, {\n      className: clsx(classes.grouped, child.props.className, size !== 'medium' && classes[\"groupedSize\".concat(capitalize(size))]),\n      selected: selected,\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      size: size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import React, { useState } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Link,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  colors,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport { Users as UsersIcon } from \"react-feather\";\nimport getInitials from \"src/utils/getInitials\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  media: {\n    height: 200,\n    backgroundColor: theme.palette.background.dark,\n  },\n  likedButton: {\n    color: colors.red[600],\n  },\n  subscribersIcon: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(1),\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    // border: \"1px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    borderRadius: 10,\n  },\n}));\n\nfunction ProjectCard({ project, className, handleDelete, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [isLiked, setLiked] = useState(project.isLiked);\n  const [likes, setLikes] = useState(project.likes);\n  const [open, setOpen] = React.useState(false);\n  const handleEdit = (item) => {\n    history.push({\n      pathname: \"/app/management/project/edit/\" + item.pathSEO,\n      state: item,\n    });\n  };\n  const handleDeleteItem = () => {\n    setOpen(false);\n    handleDelete(project);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleLike = () => {\n    setLiked(true);\n    setLikes((prevLikes) => prevLikes + 1);\n  };\n\n  const handleUnlike = () => {\n    setLiked(false);\n    setLikes((prevLikes) => prevLikes - 1);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box p={3}>\n        <CardMedia\n          className={classes.media}\n          image={\"https://namsaigonpm.vn/data/images/\" + project}\n        />\n      </Box>\n      <Box py={2} px={3} textAlign=\"right\">\n        <Grid alignItems=\"center\" container justify=\"space-between\" spacing={3}>\n          <Box flexGrow={1} />\n          <Grid item>\n            <button type=\"button\" class=\"btn btn-danger\" onClick={handleOpen}>\n              Xoá\n            </button>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <div class=\"modal-dialog modal-sm\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\" style={{ display: \"flex\" }}>\n              <h5\n                class=\"modal-title\"\n                id=\"exampleModalLabel\"\n                style={{ flex: 1 }}\n              >\n                Thông báo\n              </h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={handleClose}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">Xác nhận xoá</div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                onClick={handleClose}\n                data-dismiss=\"modal\"\n              >\n                Đóng\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                onClick={handleDeleteItem}\n              >\n                Xác nhận\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired,\n};\n\nexport default ProjectCard;\n","import React, { useState, useRef, useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Button,\n  Grid,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { ToggleButtonGroup, ToggleButton, Pagination } from \"@material-ui/lab\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteProjectRequest } from \"src/actions/projectActions\";\nimport { useSnackbar } from \"notistack\";\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  title: {\n    position: \"relative\",\n    \"&:after\": {\n      position: \"absolute\",\n      bottom: -8,\n      left: 0,\n      content: '\" \"',\n      height: 3,\n      width: 48,\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  sortButton: {\n    textTransform: \"none\",\n    letterSpacing: 0,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction Results({ className, projects, getProjects, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const sortRef = useRef(null);\n  const [openSort, setOpenSort] = useState(false);\n  const [selectedSort, setSelectedSort] = useState(\"Most popular\");\n  const [currentArea, setCurrentArea] = useState(\"\");\n  const [mode, setMode] = useState(\"grid\");\n\n  const onSubmitSuccess = () => {\n    enqueueSnackbar(\"Xoá dự án thành công\", {\n      variant: \"success\",\n    });\n    getProjects();\n  };\n  const onSubmitFailed = () => {\n    enqueueSnackbar(\"Xoá dự án thất bại\", {\n      variant: \"error\",\n    });\n  };\n  const handleDelete = async (item) => {\n    await dispatch(\n      deleteProjectRequest(\n        { id: item._id },\n        (res) => {\n          onSubmitSuccess();\n        },\n        (error) => {\n          onSubmitFailed();\n        }\n      )\n    );\n  };\n  const handleSortOpen = () => {\n    setOpenSort(true);\n  };\n\n  const handleSortClose = () => {\n    setOpenSort(false);\n  };\n\n  const handleSortSelect = (value) => {\n    setSelectedSort(value);\n    setOpenSort(false);\n  };\n\n  const handleModeChange = (event, value) => {\n    setMode(value);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        flexWrap=\"wrap\"\n        mb={2}\n      >\n        <Typography className={classes.title} variant=\"h5\" color=\"textPrimary\">\n          Tổng cộng {projects.length} hình ảnh đã được upload\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Button\n            className={classes.sortButton}\n            onClick={handleSortOpen}\n            ref={sortRef}\n          >\n            {selectedSort}\n            <ArrowDropDownIcon />\n          </Button>\n          <ToggleButtonGroup\n            exclusive\n            onChange={handleModeChange}\n            size=\"small\"\n            value={mode}\n          >\n            <ToggleButton value=\"grid\">\n              <ViewModuleIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Box>\n      </Box>\n      <Grid container spacing={3}>\n        {projects.map((project) => (\n          <Grid\n            item\n            key={project.id}\n            md={mode === \"grid\" ? 4 : 12}\n            sm={mode === \"grid\" ? 6 : 12}\n            xs={12}\n          >\n            <ProjectCard handleDelete={handleDelete} project={project} />\n          </Grid>\n        ))}\n      </Grid>\n      <Box mt={6} display=\"flex\" justifyContent=\"center\">\n        <Pagination count={3} />\n      </Box>\n      <Menu\n        anchorEl={sortRef.current}\n        className={classes.menu}\n        onClose={handleSortClose}\n        open={openSort}\n        elevation={1}\n      >\n        {[\"Most recent\", \"Popular\", \"Price high\", \"Price low\", \"On sale\"].map(\n          (option) => (\n            <MenuItem key={option} onClick={() => handleSortSelect(option)}>\n              <ListItemText primary={option} />\n            </MenuItem>\n          )\n        )}\n      </Menu>\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  projects: PropTypes.array.isRequired,\n};\n\nexport default Results;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport {\n  Box,\n  Container,\n  makeStyles,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport Page from \"src/components/Page\";\nimport axios from \"src/utils/axios\";\nimport useIsMountedRef from \"src/hooks/useIsMountedRef\";\n\n// import Filter from \"./Filter\";\nimport Results from \"./Results\";\nimport moment from \"moment\";\nimport { getAllImageRequest } from \"../../../actions/imageActions\";\nimport { useDispatch } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n}));\n\nfunction ProjectListView() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [projects, setProjects] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const getProjects = useCallback(() => {\n    dispatch(\n      getAllImageRequest(\n        (res) => {\n          console.log(\"getAllImageRequest\", res);\n          setProjects(res);\n          setLoading(false);\n        },\n        (error) => {\n          console.log(\"error\", error);\n          setLoading(false);\n        }\n      )\n    );\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProjects();\n  }, []);\n\n  return (\n    <Page className={classes.root} title=\"Project List\">\n      <Container maxWidth=\"lg\">\n        <Box mt={3}>{/* <Filter /> */}</Box>\n        <Box mt={6}>\n          {isLoading ? (\n            <Box mt={12} display=\"flex\" justifyContent=\"center\">\n              <CircularProgress value={100} />\n            </Box>\n          ) : (\n            <Results projects={projects} getProjects={getProjects} />\n          )}\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default ProjectListView;\n"],"sourceRoot":""}