{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","components/Label.js","views/management/JobListView/index.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","useStyles","makeStyles","theme","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","error","success","warning","Label","children","rest","style","defaultProps","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","width","zIndex","background","default","bulkAction","marginLeft","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","image","Results","products","dispatch","useDispatch","history","useHistory","useState","itemClick","setItemClick","open","setOpen","enqueueSnackbar","useSnackbar","category","availability","inStock","isShippable","setLoading","listJob","setListJob","getJobs","useCallback","getJobRequest","res","useEffect","handleDeleteItem","a","deleteJobRequest","id","_id","variant","handleClose","textAlign","map","item","index","key","onClick","level","count","moment","Number","parseFloat","datePosted","format","status","marginRight","type","class","push","pathname","pathSEO","state","handleEdit","handleOpen","aria-labelledby","aria-describedby","modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","role","flex","data-dismiss","aria-label","aria-hidden"],"mappings":"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","file":"static/js/91.c9327bf4.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  fade,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase',\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nfunction Label({\n  className,\n  color,\n  children,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n}\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nLabel.defaultProps = {\n  className: '',\n  color: 'secondary'\n};\n\nexport default Label;\n","/* eslint-disable max-len */\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  FormControlLabel,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles,\n  Container,\n} from \"@material-ui/core\";\nimport {\n  Image as ImageIcon,\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon,\n} from \"react-feather\";\nimport Label from \"src/components/Label\";\nimport moment from \"moment\";\nimport { getJobRequest } from \"../../../actions/jobActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { useSnackbar } from \"notistack\";\nimport { deleteJobRequest } from \"src/actions/jobActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position: \"relative\",\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default,\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2),\n  },\n  queryField: {\n    width: 500,\n  },\n  categoryField: {\n    flexBasis: 200,\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200,\n  },\n  stockField: {\n    marginLeft: theme.spacing(2),\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2),\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0,\n  },\n  image: {\n    height: 68,\n    width: 68,\n  },\n}));\n\nfunction Results({ className, products, ...rest }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [query, setQuery] = useState(\"\");\n  const [itemClick, setItemClick] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const handleEdit = (item) => {\n    history.push({\n      pathname: \"/app/management/job/edit/\" + item.pathSEO,\n      state: item,\n    });\n  };\n  const { enqueueSnackbar } = useSnackbar();\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null,\n  });\n  const [isLoading, setLoading] = useState(true);\n  const [listJob, setListJob] = useState([]);\n  const getJobs = useCallback(() => {\n    dispatch(\n      getJobRequest(\n        (res) => {\n          setListJob(res);\n          setLoading(false);\n        },\n        (error) => {\n          setLoading(false);\n        }\n      )\n    );\n  }, []);\n  useEffect(() => {\n    getJobs();\n  }, []);\n\n  const onSubmitSuccess = () => {\n    enqueueSnackbar(\"Xoá dự án thành công\", {\n      variant: \"success\",\n    });\n    getJobs();\n  };\n  const onSubmitFailed = () => {\n    enqueueSnackbar(\"Xoá dự án thất bại\", {\n      variant: \"error\",\n    });\n  };\n  const handleDeleteItem = async () => {\n    setOpen(false);\n    await dispatch(\n      deleteJobRequest(\n        { id: itemClick._id },\n        (res) => {\n          onSubmitSuccess();\n        },\n        (error) => {\n          onSubmitFailed();\n        }\n      )\n    );\n  };\n\n  const handleOpen = (item) => {\n    setItemClick(item);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Container>\n        <PerfectScrollbar>\n          <Box>\n            <Table style={{ marginTop: 56 }}>\n              <TableHead>\n                <TableRow>\n                  <td\n                    className=\"col-md-1 title-header-table \"\n                    style={{ paddingLeft: 10, textAlign: \"left\" }}\n                  >\n                    STT\n                  </td>\n                  <td\n                    className=\"col-md-2 title-header-table \"\n                    style={{ paddingLeft: 0, textAlign: \"left\" }}\n                  >\n                    Chức vụ\n                  </td>\n                  <td className=\"col-md-2 title-header-table \">Trình độ</td>\n                  <td className=\"col-md-1 title-header-table \">Số lượng</td>\n                  <td className=\"col-md-2 title-header-table \">Ngày đăng</td>\n                  <td\n                    className=\"col-md-2 title-header-table \"\n                    style={{ paddingRight: 10 }}\n                  >\n                    Tình trạng\n                  </td>\n                  <td\n                    className=\"col-md-1 title-header-table \"\n                    style={{ paddingRight: 10, textAlign: \"right\" }}\n                  ></td>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {listJob.map((item, index) => {\n                  return (\n                    <TableRow\n                      className=\"table-row \"\n                      key={item.id}\n                      onClick={() => {}}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <td style={{ textAlign: \"left\", paddingLeft: 10 }}>\n                        {index + 1}\n                      </td>\n                      <td>\n                        <div\n                          style={{ textAlign: \"left\" }}\n                          className=\"title-position\"\n                        >\n                          {item.position}\n                        </div>\n                      </td>\n                      <td>\n                        <div style={{ display: \"flex\" }}>\n                          <div className=\"title-level\">{item.level}</div>\n                        </div>\n                      </td>\n                      <td> {item.count}</td>\n                      <td>\n                        {moment(Number.parseFloat(item.datePosted)).format(\"L\")}\n                      </td>\n\n                      <td style={{ paddingRight: 10 }}>\n                        <div style={{ display: \"flex\" }}>\n                          {item.status === 0 ? (\n                            <div\n                              className=\"job-close\"\n                              style={{ marginRight: \"auto\" }}\n                            >\n                              Đã đóng\n                            </div>\n                          ) : (\n                            <div\n                              className=\"job-open\"\n                              style={{ marginRight: \"auto\" }}\n                            >\n                              Còn mở\n                            </div>\n                          )}\n                        </div>\n                      </td>\n                      <td className=\"row-ct\">\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-primary\"\n                          style={{ marginRight: 20 }}\n                          onClick={() => {\n                            handleEdit(item);\n                          }}\n                        >\n                          Sửa\n                        </button>\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-danger\"\n                          onClick={() => {\n                            handleOpen(item);\n                          }}\n                        >\n                          Xoá\n                        </button>\n                      </td>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n      </Container>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <div class=\"modal-dialog modal-sm\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\" style={{ display: \"flex\" }}>\n              <h5\n                class=\"modal-title\"\n                id=\"exampleModalLabel\"\n                style={{ flex: 1 }}\n              >\n                Thông báo\n              </h5>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={handleClose}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">Xác nhận xoá</div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                onClick={handleClose}\n                data-dismiss=\"modal\"\n              >\n                Đóng\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-primary\"\n                onClick={handleDeleteItem}\n              >\n                Xác nhận\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Card>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array,\n};\n\nResults.defaultProps = {\n  products: [],\n};\n\nexport default Results;\n"],"sourceRoot":""}