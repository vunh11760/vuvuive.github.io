{"version":3,"sources":["views/docs/ApiCallsView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","target","href","parentName","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"wjBAGO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAK,KAAO,kBAAkB,MAAQ,KAS1FC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,aACH,aACL,kBACE,GAAM,+BACH,gCACL,qBAAK,uDAAsD,iBAAGC,OAAO,SAASC,KAAK,kCAAmC,SAAa,8EAA6E,iBAAGD,OAAO,SAASC,KAAK,oCAAqC,SAAa,KAC1R,kBACE,GAAM,WACH,WACL,qBAAK,oKACL,uBAAK,oBAAMC,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,u3IAGhB,kBACE,GAAM,wBACH,wBACL,qBAAK,yCAAwC,iBAAGF,OAAO,SAASC,KAAK,kDAAmD,sBAA0B,iPAClJ,kBACE,GAAM,yCACH,yCACL,qBAAK,uBACL,sBACE,kBAAIC,WAAW,MAAO,sCACtB,kBAAIA,WAAW,MAAO,8CAA6C,0BAAYA,WAAW,MAAO,YAAyB,aAE5H,kBACE,GAAM,+BACH,+BACL,qBAAK,2HACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,u/CAOpBN,EAAWO,gBAAiB,EACrB,MAAMC,EAAkB,CAACP,EAAW,KAAO,CAChD,CACEQ,GAAI,8BACJC,MAAO,EACPC,MAAO,+BACPC,SAAU,IAId,CACIH,GAAI,UACJC,MAAO,EACPC,MAAO,UACPC,SAAU,IAId,CACIH,GAAI,uBACJC,MAAO,EACPC,MAAO,uBACPC,SAAU,IAId,CACIH,GAAI,wCACJC,MAAO,EACPC,MAAO,wCACPC,SAAU,CACN,CACMH,GAAI,8BACJC,MAAO,EACPC,MAAO,8BACPC,SAAU,OAQXC,EAAc","file":"static/js/95.a180b65e.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.31,\"time\":78600.00000000001,\"words\":262}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api-calls\"\n    }}>{`Api Calls`}</h1>\n    <h2 {...{\n      \"id\": \"how-can-i-make-an-ajax-call\"\n    }}>{`How can I make an AJAX call?`}</h2>\n    <p>{`You can use any library you like. We decided to use `}<a target=\"_blank\" href=\"https://github.com/axios/axios\">{`Axios`}</a>{` since it allows us to create instances. Another good alternative could be `}<a target=\"_blank\" href=\"https://github.com/andris9/fetch\">{`Fetch`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Since we keep up to date with the latest updates of React, our product uses functional components with React Hooks, but this can be applied to Class components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">CustomerListView</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> classes <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useStyles</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> isMountedRef <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useIsMountedRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>customers<span class=\\\"token punctuation\\\">,</span> setCustomers<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> getCustomers <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    axios\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/api/management/customers'</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">response</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isMountedRef<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">setCustomers</span><span class=\\\"token punctuation\\\">(</span>response<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>customers<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">error</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Handle error</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>isMountedRef<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">getCustomers</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>getCustomers<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token comment\\\">// Render data</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"request-interceptors\"\n    }}>{`Request interceptors`}</h2>\n    <p>{`Using Axios we were able to integrate `}<a target=\"_blank\" href=\"https://github.com/ctimmerm/axios-mock-adapter\">{`Axios Mock Adapter`}</a>{` to simulate real server calls. To archive that, you have to create an Axios instante and use it whenever you make a request call. Now you can extend your instance and add Axios Mock Adapter to listen for requests and return custom data.`}</p>\n    <h2 {...{\n      \"id\": \"removing-existing-request-interceptos\"\n    }}>{`Removing existing request interceptos`}</h2>\n    <p>{`There are two ways:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Simply use a new instance of Axios`}</li>\n      <li parentName=\"ol\">{`Remove the interecept listener existing in `}<inlineCode parentName=\"li\">{`src/mock`}</inlineCode>{` folder.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"adding-request-interceptors\"\n    }}>{`Adding request interceptors`}</h3>\n    <p>{`It takes ony a few seconds to add a new call listener. The interceptor has a similar format to Express JS, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">import</span> mock <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/utils/mock'</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmock<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">onGet</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/api/management/invoices'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  invoices<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">32.43</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> total<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">67.00</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"how-can-i-make-an-ajax-call\",\n    level: 2,\n    title: \"How can I make an AJAX call?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"example\",\n    level: 2,\n    title: \"Example\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"request-interceptors\",\n    level: 2,\n    title: \"Request interceptors\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"removing-existing-request-interceptos\",\n    level: 2,\n    title: \"Removing existing request interceptos\",\n    children: [\n        {\n              id: \"adding-request-interceptors\",\n              level: 3,\n              title: \"Adding request interceptors\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}