(this["webpackJsonp@devias-io/material-kit-pro-react"]=this["webpackJsonp@devias-io/material-kit-pro-react"]||[]).push([[96],{2179:function(e,t,n){"use strict";n.r(t),n.d(t,"readingTime",(function(){return r})),n.d(t,"default",(function(){return s})),n.d(t,"tableOfContents",(function(){return c})),n.d(t,"frontMatter",(function(){return u}));n(0);var o=n(404);function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}const r={text:"1 min read",minutes:.995,time:59700,words:199},a={};function s({components:e,...t}){return Object(o.b)("wrapper",i({},a,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"authentication"},"Authentication"),Object(o.b)("p",null,"To help our customer we implemented JWT Authentication method. You can read more about it ",Object(o.b)("a",{href:"https://jwt.io/"},"here"),". Once the user is logged in, each subsequent axios request should include the JWT, allowing the user to access routes, services, and resources that are permitted with that token."),Object(o.b)("p",null,"We plan to integrate solutions such as ",Object(o.b)("a",{href:"https://firebase.google.com/docs/auth"},"Firebase Authentication")," or ",Object(o.b)("a",{href:"https://auth0.com/"},"Auth0"),". If you want this feature to be inclunded, let us know and we\u2019ll try to release it sooner."),Object(o.b)("h2",{id:"how-authentication-works"},"How authentication works"),Object(o.b)("p",null,"Accessing dashboard pages is only possible for authenticated users. If this condition is not fullfield, the user is redirected to a login page. To sign a user into your app, you first get authentication credentials from the user. These credentials can be the user\u2019s email address and password. Once the backend services confirm the credentials, we store the login state and user profile in the global state manager, Redux, but it can be replaced with other solutions such as React Context."),Object(o.b)("p",null,"We are able check user\u2019s credentials before accesing a component / route. Once the application is reloaded we silently retrieve the stored access token then check and restore user\u2019s identity before rendering the application content."))}s.isMDXComponent=!0;const c=(e={})=>[{id:"how-authentication-works",level:2,title:"How authentication works",children:[]}],u={}}}]);
//# sourceMappingURL=96.dbaea7e8.chunk.js.map