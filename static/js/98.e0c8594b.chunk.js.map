{"version":3,"sources":["views/docs/DeploymentView/Content.mdx"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","href","target","isMDXComponent","tableOfContents","id","level","title","children","frontMatter"],"mappings":"wjBAGO,MAAMA,EAAc,CAAC,KAAO,aAAa,QAAU,KAAK,KAAO,OAAO,MAAQ,KAS/EC,EAAc,GAIL,SAASC,GAAW,WACjCC,KACGC,IAEH,OAAO,YALS,UAKT,KAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,cACH,cACL,qBAAG,0BAAYC,WAAW,KAAM,iBAA8B,6IAA4I,0BAAYA,WAAW,KAAM,cAA2B,uCAAsC,0BAAYA,WAAW,KAAM,6BAA0C,wCAAuC,0BAAYA,WAAW,KAAM,6BAA0C,iEAC7d,kBACE,GAAM,iBACH,iBACL,qBAAK,qHACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,6CAGhB,qBAAK,wEAAuE,sBAAQA,WAAW,KAAM,QAAiB,qFAA+E,0BAAYA,WAAW,KAAM,MAAmB,OAAM,0BAAYA,WAAW,KAAM,YAAyB,WACjT,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,+BAGhB,qBAAK,iEACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,iBAGhB,kBACE,GAAM,mBACH,mBACL,qBAAK,kLACL,kBACE,GAAM,aACH,aACL,qBAAK,8DACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eACb,gBAAiB,MACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,qyFAGhB,qBAAK,wKACL,qBAAK,wFACL,kBACE,GAAM,eACH,eACL,qBAAK,wIACL,qBAAK,sIACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,mCAGhB,qBAAK,0KACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,uBAGhB,qBAAK,4JACL,qBAAK,gFACL,qBAAK,4CACL,uBAAK,oBAAMA,WAAW,MAClB,UAAa,cACb,gBAAiB,KACjB,gCAAiC,GACjC,wBAA2B,CACzB,OAAU,gCAGhB,qBAAK,uIAAsI,iBAAGC,KAAK,yCAAyCC,OAAO,UAAW,qBAAyB,KACvO,kBACE,GAAM,oBACH,oBACL,qBAAK,wRAAuR,iBAAGD,KAAK,4CAA6C,iBAAqB,MAK1WL,EAAWO,gBAAiB,EACrB,MAAMC,EAAkB,CAACP,EAAW,KAAO,CAChD,CACEQ,GAAI,gBACJC,MAAO,EACPC,MAAO,gBACPC,SAAU,IAId,CACIH,GAAI,kBACJC,MAAO,EACPC,MAAO,kBACPC,SAAU,CACN,CACMH,GAAI,YACJC,MAAO,EACPC,MAAO,YACPC,SAAU,IAIlB,CACQH,GAAI,cACJC,MAAO,EACPC,MAAO,cACPC,SAAU,IAIlB,CACQH,GAAI,mBACJC,MAAO,EACPC,MAAO,mBACPC,SAAU,OAQXC,EAAc","file":"static/js/98.e0c8594b.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.33,\"time\":139800,\"words\":466}\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"deployment\"\n    }}>{`Deployment`}</h1>\n    <p><inlineCode parentName=\"p\">{`npm run build`}</inlineCode>{` creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served `}<inlineCode parentName=\"p\">{`index.html`}</inlineCode>{`, and requests to static paths like `}<inlineCode parentName=\"p\">{`/static/js/main.<hash>.js`}</inlineCode>{` are served with the contents of the `}<inlineCode parentName=\"p\">{`/static/js/main.<hash>.js`}</inlineCode>{` file. For more information see the production build section.`}</p>\n    <h2 {...{\n      \"id\": \"static-server\"\n    }}>{`Static Server`}</h2>\n    <p>{`For environments using Node, the easiest way to handle this would be to install serve and let it handle the rest:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"npm install -g serve\\nserve -s build\\n\"\n        }\n      }}></code></pre>\n    <p>{`The last command shown above will serve your static site on the port `}<strong parentName=\"p\">{`5000`}</strong>{`. Like many of serve’s internal settings, the port can be adjusted using the `}<inlineCode parentName=\"p\">{`-l`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--listen`}</inlineCode>{` flags:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"serve -s build -l 4000\\n\"\n        }\n      }}></code></pre>\n    <p>{`Run this command to get a full list of the options available:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"serve -h\\n\"\n        }\n      }}></code></pre>\n    <h2 {...{\n      \"id\": \"other-solutions\"\n    }}>{`Other Solutions`}</h2>\n    <p>{`You don’t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.`}</p>\n    <h3 {...{\n      \"id\": \"expressjs\"\n    }}>{`ExpressJS`}</h3>\n    <p>{`Here’s a programmatic example using Node and Express:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"data-language\": \"jsx\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"<span class=\\\"token keyword\\\">const</span> express <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'express'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'path'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> app <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">express</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">use</span><span class=\\\"token punctuation\\\">(</span>express<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">static</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'build'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/*'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sendFile</span><span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'build'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'index.html'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">9000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\"\n        }\n      }}></code></pre>\n    <p>{`The choice of your server software isn’t important either. Since Create React App is completely platform-agnostic, there’s no need to explicitly use Node.`}</p>\n    <p>{`The build folder with static assets is the only output produced by Create React App.`}</p>\n    <h3 {...{\n      \"id\": \"netlify-cli\"\n    }}>{`Netlify CLI`}</h3>\n    <p>{`Netlify’s command line interface (CLI) lets you deploy sites or configure continuous deployment straight from the command line.`}</p>\n    <p>{`To install Netlify CLI, make sure you have Node.js version 8 or higher, then run this command from any directory in your terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"npm install netlify-cli -g\\n\"\n        }\n      }}></code></pre>\n    <p>{`It is possible to deploy a site manually, without continuous deployment. This method uploads files directly from your local project directory to your site on Netlify.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"netlify deploy\\n\"\n        }\n      }}></code></pre>\n    <p>{`The first time you run the command, Netlify CLI will prompt you to select an existing site or create a new one, linking the site for all future deploys.`}</p>\n    <p>{`You will need to set up a redirect and rewrite rule for the single page app.`}</p>\n    <p>{`That redirect rule would look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-sh\",\n        \"data-language\": \"sh\",\n        \"data-highlighted-line-numbers\": \"\",\n        \"dangerouslySetInnerHTML\": {\n          \"__html\": \"/*    /index.html   200\\n\"\n        }\n      }}></code></pre>\n    <p>{`You can add redirect rules to the _redirects file or to your netlify.toml config file. For more information on redirects on Netlify `}<a href=\"https://www.netlify.com/docs/redirects\" target=\"_blank\">{`checkout the docs`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"firebase-hosting\"\n    }}>{`Firebase Hosting`}</h3>\n    <p>{`Using the Firebase CLI, you deploy files from local directories on your computer to your Hosting server. Beyond serving static content, you can use Cloud Functions for Firebase or Cloud Run to serve dynamic content and host microservices on your sites. Read more about it from `}<a href=\"https://firebase.google.com/docs/hosting\">{`official docs`}</a>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"static-server\",\n    level: 2,\n    title: \"Static Server\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"other-solutions\",\n    level: 2,\n    title: \"Other Solutions\",\n    children: [\n        {\n              id: \"expressjs\",\n              level: 3,\n              title: \"ExpressJS\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"netlify-cli\",\n              level: 3,\n              title: \"Netlify CLI\",\n              children: [\n                      \n                    ]\n            },\n      {\n              id: \"firebase-hosting\",\n              level: 3,\n              title: \"Firebase Hosting\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n"],"sourceRoot":""}